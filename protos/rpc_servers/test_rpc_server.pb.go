// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test_rpc_server.proto

package rpc_servers

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestInvokeReq struct {
	StreamName           string   `protobuf:"bytes,1,opt,name=stream_name,json=streamName,proto3" json:"stream_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestInvokeReq) Reset()         { *m = TestInvokeReq{} }
func (m *TestInvokeReq) String() string { return proto.CompactTextString(m) }
func (*TestInvokeReq) ProtoMessage()    {}
func (*TestInvokeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3761f2cd9fd856e1, []int{0}
}

func (m *TestInvokeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestInvokeReq.Unmarshal(m, b)
}
func (m *TestInvokeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestInvokeReq.Marshal(b, m, deterministic)
}
func (m *TestInvokeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestInvokeReq.Merge(m, src)
}
func (m *TestInvokeReq) XXX_Size() int {
	return xxx_messageInfo_TestInvokeReq.Size(m)
}
func (m *TestInvokeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TestInvokeReq.DiscardUnknown(m)
}

var xxx_messageInfo_TestInvokeReq proto.InternalMessageInfo

func (m *TestInvokeReq) GetStreamName() string {
	if m != nil {
		return m.StreamName
	}
	return ""
}

type TestInvokeResp struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestInvokeResp) Reset()         { *m = TestInvokeResp{} }
func (m *TestInvokeResp) String() string { return proto.CompactTextString(m) }
func (*TestInvokeResp) ProtoMessage()    {}
func (*TestInvokeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3761f2cd9fd856e1, []int{1}
}

func (m *TestInvokeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestInvokeResp.Unmarshal(m, b)
}
func (m *TestInvokeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestInvokeResp.Marshal(b, m, deterministic)
}
func (m *TestInvokeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestInvokeResp.Merge(m, src)
}
func (m *TestInvokeResp) XXX_Size() int {
	return xxx_messageInfo_TestInvokeResp.Size(m)
}
func (m *TestInvokeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TestInvokeResp.DiscardUnknown(m)
}

var xxx_messageInfo_TestInvokeResp proto.InternalMessageInfo

func (m *TestInvokeResp) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func init() {
	proto.RegisterType((*TestInvokeReq)(nil), "TestInvokeReq")
	proto.RegisterType((*TestInvokeResp)(nil), "TestInvokeResp")
}

func init() { proto.RegisterFile("test_rpc_server.proto", fileDescriptor_3761f2cd9fd856e1) }

var fileDescriptor_3761f2cd9fd856e1 = []byte{
	// 163 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x49, 0x2d, 0x2e,
	0x89, 0x2f, 0x2a, 0x48, 0x8e, 0x2f, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x57, 0x32, 0xe0, 0xe2, 0x0d, 0x49, 0x2d, 0x2e, 0xf1, 0xcc, 0x2b, 0xcb, 0xcf, 0x4e, 0x0d,
	0x4a, 0x2d, 0x14, 0x92, 0xe7, 0xe2, 0x2e, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0x8d, 0xcf, 0x4b, 0xcc,
	0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0xe2, 0x82, 0x08, 0xf9, 0x25, 0xe6, 0xa6, 0x2a,
	0x19, 0x73, 0xf1, 0x21, 0xeb, 0x28, 0x2e, 0x10, 0x52, 0xe4, 0xe2, 0x01, 0x99, 0x99, 0x99, 0x9c,
	0x8a, 0xac, 0x87, 0x1b, 0x2a, 0x06, 0xd2, 0x64, 0xe4, 0xca, 0x25, 0x02, 0xd2, 0x14, 0x54, 0x90,
	0x1c, 0x0c, 0xb6, 0x3d, 0x18, 0x22, 0x27, 0xa4, 0xcb, 0xc5, 0x85, 0x30, 0x4c, 0x88, 0x4f, 0x0f,
	0xc5, 0x2d, 0x52, 0xfc, 0x7a, 0xa8, 0x36, 0x39, 0xf1, 0x47, 0xf1, 0xea, 0xe9, 0x23, 0xfc, 0x50,
	0x9c, 0xc4, 0x06, 0xf6, 0x85, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xad, 0x05, 0x8d, 0xbe, 0xde,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestRpcServerServiceClient is the client API for TestRpcServerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestRpcServerServiceClient interface {
	TestInvoke(ctx context.Context, in *TestInvokeReq, opts ...grpc.CallOption) (*TestInvokeResp, error)
}

type testRpcServerServiceClient struct {
	cc *grpc.ClientConn
}

func NewTestRpcServerServiceClient(cc *grpc.ClientConn) TestRpcServerServiceClient {
	return &testRpcServerServiceClient{cc}
}

func (c *testRpcServerServiceClient) TestInvoke(ctx context.Context, in *TestInvokeReq, opts ...grpc.CallOption) (*TestInvokeResp, error) {
	out := new(TestInvokeResp)
	err := c.cc.Invoke(ctx, "/TestRpcServerService/TestInvoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestRpcServerServiceServer is the server API for TestRpcServerService service.
type TestRpcServerServiceServer interface {
	TestInvoke(context.Context, *TestInvokeReq) (*TestInvokeResp, error)
}

// UnimplementedTestRpcServerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTestRpcServerServiceServer struct {
}

func (*UnimplementedTestRpcServerServiceServer) TestInvoke(ctx context.Context, req *TestInvokeReq) (*TestInvokeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestInvoke not implemented")
}

func RegisterTestRpcServerServiceServer(s *grpc.Server, srv TestRpcServerServiceServer) {
	s.RegisterService(&_TestRpcServerService_serviceDesc, srv)
}

func _TestRpcServerService_TestInvoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestInvokeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestRpcServerServiceServer).TestInvoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TestRpcServerService/TestInvoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestRpcServerServiceServer).TestInvoke(ctx, req.(*TestInvokeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestRpcServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TestRpcServerService",
	HandlerType: (*TestRpcServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TestInvoke",
			Handler:    _TestRpcServerService_TestInvoke_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test_rpc_server.proto",
}
