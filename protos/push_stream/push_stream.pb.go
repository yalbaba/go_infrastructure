// Code generated by protoc-gen-go. DO NOT EDIT.
// source: push_stream/push_stream.proto

package push_stream

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestInvokeReq struct {
	StreamName           string   `protobuf:"bytes,1,opt,name=stream_name,json=streamName,proto3" json:"stream_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestInvokeReq) Reset()         { *m = TestInvokeReq{} }
func (m *TestInvokeReq) String() string { return proto.CompactTextString(m) }
func (*TestInvokeReq) ProtoMessage()    {}
func (*TestInvokeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fa7898a36465485, []int{0}
}

func (m *TestInvokeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestInvokeReq.Unmarshal(m, b)
}
func (m *TestInvokeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestInvokeReq.Marshal(b, m, deterministic)
}
func (m *TestInvokeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestInvokeReq.Merge(m, src)
}
func (m *TestInvokeReq) XXX_Size() int {
	return xxx_messageInfo_TestInvokeReq.Size(m)
}
func (m *TestInvokeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TestInvokeReq.DiscardUnknown(m)
}

var xxx_messageInfo_TestInvokeReq proto.InternalMessageInfo

func (m *TestInvokeReq) GetStreamName() string {
	if m != nil {
		return m.StreamName
	}
	return ""
}

type TestInvokeResp struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestInvokeResp) Reset()         { *m = TestInvokeResp{} }
func (m *TestInvokeResp) String() string { return proto.CompactTextString(m) }
func (*TestInvokeResp) ProtoMessage()    {}
func (*TestInvokeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fa7898a36465485, []int{1}
}

func (m *TestInvokeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestInvokeResp.Unmarshal(m, b)
}
func (m *TestInvokeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestInvokeResp.Marshal(b, m, deterministic)
}
func (m *TestInvokeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestInvokeResp.Merge(m, src)
}
func (m *TestInvokeResp) XXX_Size() int {
	return xxx_messageInfo_TestInvokeResp.Size(m)
}
func (m *TestInvokeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TestInvokeResp.DiscardUnknown(m)
}

var xxx_messageInfo_TestInvokeResp proto.InternalMessageInfo

func (m *TestInvokeResp) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func init() {
	proto.RegisterType((*TestInvokeReq)(nil), "TestInvokeReq")
	proto.RegisterType((*TestInvokeResp)(nil), "TestInvokeResp")
}

func init() { proto.RegisterFile("push_stream/push_stream.proto", fileDescriptor_9fa7898a36465485) }

var fileDescriptor_9fa7898a36465485 = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2d, 0x28, 0x2d, 0xce,
	0x88, 0x2f, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0xd5, 0x47, 0x62, 0xeb, 0x15, 0x14, 0xe5, 0x97, 0xe4,
	0x2b, 0x19, 0x70, 0xf1, 0x86, 0xa4, 0x16, 0x97, 0x78, 0xe6, 0x95, 0xe5, 0x67, 0xa7, 0x06, 0xa5,
	0x16, 0x0a, 0xc9, 0x73, 0x71, 0x43, 0x14, 0xc4, 0xe7, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30,
	0x6a, 0x70, 0x06, 0x71, 0x41, 0x84, 0xfc, 0x12, 0x73, 0x53, 0x95, 0x8c, 0xb9, 0xf8, 0x90, 0x75,
	0x14, 0x17, 0x08, 0x29, 0x72, 0xf1, 0x14, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x22, 0xeb, 0xe1,
	0x86, 0x8a, 0x81, 0x34, 0x19, 0x39, 0x71, 0x09, 0x06, 0x94, 0x16, 0x67, 0x04, 0x83, 0x8d, 0x09,
	0x86, 0x48, 0x08, 0xe9, 0x72, 0x71, 0x21, 0x4c, 0x12, 0xe2, 0xd3, 0x43, 0x71, 0x88, 0x14, 0xbf,
	0x1e, 0xaa, 0x35, 0x4e, 0xfc, 0x51, 0xbc, 0x7a, 0xc8, 0x3e, 0x48, 0x62, 0x03, 0x7b, 0xc1, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x58, 0x46, 0x62, 0xe3, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PushStreamServiceClient is the client API for PushStreamService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushStreamServiceClient interface {
	TestInvoke(ctx context.Context, in *TestInvokeReq, opts ...grpc.CallOption) (*TestInvokeResp, error)
}

type pushStreamServiceClient struct {
	cc *grpc.ClientConn
}

func NewPushStreamServiceClient(cc *grpc.ClientConn) PushStreamServiceClient {
	return &pushStreamServiceClient{cc}
}

func (c *pushStreamServiceClient) TestInvoke(ctx context.Context, in *TestInvokeReq, opts ...grpc.CallOption) (*TestInvokeResp, error) {
	out := new(TestInvokeResp)
	err := c.cc.Invoke(ctx, "/PushStreamService/TestInvoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PushStreamServiceServer is the server API for PushStreamService service.
type PushStreamServiceServer interface {
	TestInvoke(context.Context, *TestInvokeReq) (*TestInvokeResp, error)
}

// UnimplementedPushStreamServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPushStreamServiceServer struct {
}

func (*UnimplementedPushStreamServiceServer) TestInvoke(ctx context.Context, req *TestInvokeReq) (*TestInvokeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestInvoke not implemented")
}

func RegisterPushStreamServiceServer(s *grpc.Server, srv PushStreamServiceServer) {
	s.RegisterService(&_PushStreamService_serviceDesc, srv)
}

func _PushStreamService_TestInvoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestInvokeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushStreamServiceServer).TestInvoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PushStreamService/TestInvoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushStreamServiceServer).TestInvoke(ctx, req.(*TestInvokeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PushStreamService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PushStreamService",
	HandlerType: (*PushStreamServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TestInvoke",
			Handler:    _PushStreamService_TestInvoke_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "push_stream/push_stream.proto",
}
