// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: search/search.proto

package search

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SearchArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text          string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Skip          int32  `protobuf:"varint,2,opt,name=skip,proto3" json:"skip,omitempty"`
	Limit         int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	CurrentUserId string `protobuf:"bytes,4,opt,name=current_user_id,json=currentUserId,proto3" json:"current_user_id,omitempty"` // 当前用户id
}

func (x *SearchArg) Reset() {
	*x = SearchArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchArg) ProtoMessage() {}

func (x *SearchArg) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchArg.ProtoReflect.Descriptor instead.
func (*SearchArg) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{0}
}

func (x *SearchArg) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SearchArg) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *SearchArg) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchArg) GetCurrentUserId() string {
	if x != nil {
		return x.CurrentUserId
	}
	return ""
}

type SearchAllArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text              string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Page              int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	SiteLimit         int32  `protobuf:"varint,3,opt,name=site_limit,json=siteLimit,proto3" json:"site_limit,omitempty"`
	LiveLimit         int32  `protobuf:"varint,4,opt,name=live_limit,json=liveLimit,proto3" json:"live_limit,omitempty"`
	FootprintLimit    int32  `protobuf:"varint,5,opt,name=footprint_limit,json=footprintLimit,proto3" json:"footprint_limit,omitempty"`
	UserLimit         int32  `protobuf:"varint,6,opt,name=user_limit,json=userLimit,proto3" json:"user_limit,omitempty"`
	TopicLimit        int32  `protobuf:"varint,7,opt,name=topic_limit,json=topicLimit,proto3" json:"topic_limit,omitempty"`
	EncyclopediaLimit int32  `protobuf:"varint,8,opt,name=encyclopedia_limit,json=encyclopediaLimit,proto3" json:"encyclopedia_limit,omitempty"`
	CurrentUserId     string `protobuf:"bytes,9,opt,name=current_user_id,json=currentUserId,proto3" json:"current_user_id,omitempty"` // 当前用户id
	VideoLimit        int32  `protobuf:"varint,10,opt,name=video_limit,json=videoLimit,proto3" json:"video_limit,omitempty"`
	LandscapeLimit    int32  `protobuf:"varint,11,opt,name=landscape_limit,json=landscapeLimit,proto3" json:"landscape_limit,omitempty"`
}

func (x *SearchAllArg) Reset() {
	*x = SearchAllArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAllArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAllArg) ProtoMessage() {}

func (x *SearchAllArg) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAllArg.ProtoReflect.Descriptor instead.
func (*SearchAllArg) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{1}
}

func (x *SearchAllArg) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SearchAllArg) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAllArg) GetSiteLimit() int32 {
	if x != nil {
		return x.SiteLimit
	}
	return 0
}

func (x *SearchAllArg) GetLiveLimit() int32 {
	if x != nil {
		return x.LiveLimit
	}
	return 0
}

func (x *SearchAllArg) GetFootprintLimit() int32 {
	if x != nil {
		return x.FootprintLimit
	}
	return 0
}

func (x *SearchAllArg) GetUserLimit() int32 {
	if x != nil {
		return x.UserLimit
	}
	return 0
}

func (x *SearchAllArg) GetTopicLimit() int32 {
	if x != nil {
		return x.TopicLimit
	}
	return 0
}

func (x *SearchAllArg) GetEncyclopediaLimit() int32 {
	if x != nil {
		return x.EncyclopediaLimit
	}
	return 0
}

func (x *SearchAllArg) GetCurrentUserId() string {
	if x != nil {
		return x.CurrentUserId
	}
	return ""
}

func (x *SearchAllArg) GetVideoLimit() int32 {
	if x != nil {
		return x.VideoLimit
	}
	return 0
}

func (x *SearchAllArg) GetLandscapeLimit() int32 {
	if x != nil {
		return x.LandscapeLimit
	}
	return 0
}

type SearchAllOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sites           []*Site  `protobuf:"bytes,1,rep,name=sites,proto3" json:"sites,omitempty"`
	LivesIds        []int64  `protobuf:"varint,2,rep,packed,name=lives_ids,json=livesIds,proto3" json:"lives_ids,omitempty"`
	FootprintIds    []int64  `protobuf:"varint,3,rep,packed,name=footprint_ids,json=footprintIds,proto3" json:"footprint_ids,omitempty"`
	UserIds         []string `protobuf:"bytes,4,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	TopicIds        []int64  `protobuf:"varint,5,rep,packed,name=topic_ids,json=topicIds,proto3" json:"topic_ids,omitempty"`
	EncyclopediaIds []int64  `protobuf:"varint,6,rep,packed,name=encyclopedia_ids,json=encyclopediaIds,proto3" json:"encyclopedia_ids,omitempty"`
	VideoIds        []int64  `protobuf:"varint,7,rep,packed,name=video_ids,json=videoIds,proto3" json:"video_ids,omitempty"`
	LandscapeIds    []int64  `protobuf:"varint,8,rep,packed,name=landscape_ids,json=landscapeIds,proto3" json:"landscape_ids,omitempty"`
}

func (x *SearchAllOut) Reset() {
	*x = SearchAllOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAllOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAllOut) ProtoMessage() {}

func (x *SearchAllOut) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAllOut.ProtoReflect.Descriptor instead.
func (*SearchAllOut) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{2}
}

func (x *SearchAllOut) GetSites() []*Site {
	if x != nil {
		return x.Sites
	}
	return nil
}

func (x *SearchAllOut) GetLivesIds() []int64 {
	if x != nil {
		return x.LivesIds
	}
	return nil
}

func (x *SearchAllOut) GetFootprintIds() []int64 {
	if x != nil {
		return x.FootprintIds
	}
	return nil
}

func (x *SearchAllOut) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *SearchAllOut) GetTopicIds() []int64 {
	if x != nil {
		return x.TopicIds
	}
	return nil
}

func (x *SearchAllOut) GetEncyclopediaIds() []int64 {
	if x != nil {
		return x.EncyclopediaIds
	}
	return nil
}

func (x *SearchAllOut) GetVideoIds() []int64 {
	if x != nil {
		return x.VideoIds
	}
	return nil
}

func (x *SearchAllOut) GetLandscapeIds() []int64 {
	if x != nil {
		return x.LandscapeIds
	}
	return nil
}

type SearchSiteArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text          string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Page          int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	CurrentUserId string `protobuf:"bytes,4,opt,name=current_user_id,json=currentUserId,proto3" json:"current_user_id,omitempty"` // 当前用户id
}

func (x *SearchSiteArg) Reset() {
	*x = SearchSiteArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSiteArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSiteArg) ProtoMessage() {}

func (x *SearchSiteArg) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSiteArg.ProtoReflect.Descriptor instead.
func (*SearchSiteArg) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{3}
}

func (x *SearchSiteArg) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SearchSiteArg) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchSiteArg) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchSiteArg) GetCurrentUserId() string {
	if x != nil {
		return x.CurrentUserId
	}
	return ""
}

type SearchForeignSiteArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text          string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Nation        string `protobuf:"bytes,2,opt,name=nation,proto3" json:"nation,omitempty"`
	Province      string `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`
	City          string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	Page          int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	CurrentUserId string `protobuf:"bytes,7,opt,name=current_user_id,json=currentUserId,proto3" json:"current_user_id,omitempty"` // 当前用户id
}

func (x *SearchForeignSiteArg) Reset() {
	*x = SearchForeignSiteArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchForeignSiteArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchForeignSiteArg) ProtoMessage() {}

func (x *SearchForeignSiteArg) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchForeignSiteArg.ProtoReflect.Descriptor instead.
func (*SearchForeignSiteArg) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{4}
}

func (x *SearchForeignSiteArg) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SearchForeignSiteArg) GetNation() string {
	if x != nil {
		return x.Nation
	}
	return ""
}

func (x *SearchForeignSiteArg) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *SearchForeignSiteArg) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SearchForeignSiteArg) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchForeignSiteArg) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchForeignSiteArg) GetCurrentUserId() string {
	if x != nil {
		return x.CurrentUserId
	}
	return ""
}

type Site struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Nation   string  `protobuf:"bytes,2,opt,name=nation,proto3" json:"nation,omitempty"`
	Province string  `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`
	City     string  `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	Area     string  `protobuf:"bytes,5,opt,name=area,proto3" json:"area,omitempty"`
	Lon      float64 `protobuf:"fixed64,6,opt,name=lon,proto3" json:"lon,omitempty"`
	Lat      float64 `protobuf:"fixed64,7,opt,name=lat,proto3" json:"lat,omitempty"`
}

func (x *Site) Reset() {
	*x = Site{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Site) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Site) ProtoMessage() {}

func (x *Site) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Site.ProtoReflect.Descriptor instead.
func (*Site) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{5}
}

func (x *Site) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Site) GetNation() string {
	if x != nil {
		return x.Nation
	}
	return ""
}

func (x *Site) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *Site) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Site) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *Site) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *Site) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

type SearchSiteOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sites []*Site `protobuf:"bytes,1,rep,name=sites,proto3" json:"sites,omitempty"`
}

func (x *SearchSiteOut) Reset() {
	*x = SearchSiteOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSiteOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSiteOut) ProtoMessage() {}

func (x *SearchSiteOut) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSiteOut.ProtoReflect.Descriptor instead.
func (*SearchSiteOut) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{6}
}

func (x *SearchSiteOut) GetSites() []*Site {
	if x != nil {
		return x.Sites
	}
	return nil
}

type SearchCityArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text     string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *SearchCityArg) Reset() {
	*x = SearchCityArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCityArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCityArg) ProtoMessage() {}

func (x *SearchCityArg) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCityArg.ProtoReflect.Descriptor instead.
func (*SearchCityArg) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{7}
}

func (x *SearchCityArg) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SearchCityArg) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchCityArg) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchCityTrans struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Nation   string `protobuf:"bytes,2,opt,name=nation,proto3" json:"nation,omitempty"`
	Province string `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`
	City     string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	Level    int32  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *SearchCityTrans) Reset() {
	*x = SearchCityTrans{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCityTrans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCityTrans) ProtoMessage() {}

func (x *SearchCityTrans) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCityTrans.ProtoReflect.Descriptor instead.
func (*SearchCityTrans) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{8}
}

func (x *SearchCityTrans) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchCityTrans) GetNation() string {
	if x != nil {
		return x.Nation
	}
	return ""
}

func (x *SearchCityTrans) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *SearchCityTrans) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SearchCityTrans) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type SearchCityOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cities []*SearchCityTrans `protobuf:"bytes,1,rep,name=cities,proto3" json:"cities,omitempty"`
	Total  int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchCityOut) Reset() {
	*x = SearchCityOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCityOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCityOut) ProtoMessage() {}

func (x *SearchCityOut) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCityOut.ProtoReflect.Descriptor instead.
func (*SearchCityOut) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{9}
}

func (x *SearchCityOut) GetCities() []*SearchCityTrans {
	if x != nil {
		return x.Cities
	}
	return nil
}

func (x *SearchCityOut) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchLivesOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids   []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Total int64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchLivesOut) Reset() {
	*x = SearchLivesOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLivesOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLivesOut) ProtoMessage() {}

func (x *SearchLivesOut) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLivesOut.ProtoReflect.Descriptor instead.
func (*SearchLivesOut) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{10}
}

func (x *SearchLivesOut) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SearchLivesOut) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchFootprintsOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids   []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Total int64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchFootprintsOut) Reset() {
	*x = SearchFootprintsOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFootprintsOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFootprintsOut) ProtoMessage() {}

func (x *SearchFootprintsOut) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFootprintsOut.ProtoReflect.Descriptor instead.
func (*SearchFootprintsOut) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{11}
}

func (x *SearchFootprintsOut) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SearchFootprintsOut) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchUsersOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids   []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Total int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchUsersOut) Reset() {
	*x = SearchUsersOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUsersOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsersOut) ProtoMessage() {}

func (x *SearchUsersOut) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUsersOut.ProtoReflect.Descriptor instead.
func (*SearchUsersOut) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{12}
}

func (x *SearchUsersOut) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SearchUsersOut) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchTopicsOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids   []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Total int64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchTopicsOut) Reset() {
	*x = SearchTopicsOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTopicsOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTopicsOut) ProtoMessage() {}

func (x *SearchTopicsOut) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTopicsOut.ProtoReflect.Descriptor instead.
func (*SearchTopicsOut) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{13}
}

func (x *SearchTopicsOut) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SearchTopicsOut) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchEncyclopediasOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids   []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Total int64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchEncyclopediasOut) Reset() {
	*x = SearchEncyclopediasOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEncyclopediasOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEncyclopediasOut) ProtoMessage() {}

func (x *SearchEncyclopediasOut) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEncyclopediasOut.ProtoReflect.Descriptor instead.
func (*SearchEncyclopediasOut) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{14}
}

func (x *SearchEncyclopediasOut) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SearchEncyclopediasOut) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchIntIdsOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids   []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Total int64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchIntIdsOut) Reset() {
	*x = SearchIntIdsOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchIntIdsOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchIntIdsOut) ProtoMessage() {}

func (x *SearchIntIdsOut) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchIntIdsOut.ProtoReflect.Descriptor instead.
func (*SearchIntIdsOut) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{15}
}

func (x *SearchIntIdsOut) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SearchIntIdsOut) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchTopicWithMatchOneArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text        string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	CheckEnable bool   `protobuf:"varint,2,opt,name=check_enable,json=checkEnable,proto3" json:"check_enable,omitempty"`
}

func (x *SearchTopicWithMatchOneArg) Reset() {
	*x = SearchTopicWithMatchOneArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTopicWithMatchOneArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTopicWithMatchOneArg) ProtoMessage() {}

func (x *SearchTopicWithMatchOneArg) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTopicWithMatchOneArg.ProtoReflect.Descriptor instead.
func (*SearchTopicWithMatchOneArg) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{16}
}

func (x *SearchTopicWithMatchOneArg) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SearchTopicWithMatchOneArg) GetCheckEnable() bool {
	if x != nil {
		return x.CheckEnable
	}
	return false
}

type SearchTopicWithMatchOneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId int64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Has     bool  `protobuf:"varint,2,opt,name=has,proto3" json:"has,omitempty"` // 是否找到
}

func (x *SearchTopicWithMatchOneResp) Reset() {
	*x = SearchTopicWithMatchOneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTopicWithMatchOneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTopicWithMatchOneResp) ProtoMessage() {}

func (x *SearchTopicWithMatchOneResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTopicWithMatchOneResp.ProtoReflect.Descriptor instead.
func (*SearchTopicWithMatchOneResp) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{17}
}

func (x *SearchTopicWithMatchOneResp) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *SearchTopicWithMatchOneResp) GetHas() bool {
	if x != nil {
		return x.Has
	}
	return false
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lon float64 `protobuf:"fixed64,1,opt,name=lon,proto3" json:"lon,omitempty"`
	Lat float64 `protobuf:"fixed64,2,opt,name=lat,proto3" json:"lat,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{18}
}

func (x *Location) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *Location) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

type SyncReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SyncReq) Reset() {
	*x = SyncReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncReq) ProtoMessage() {}

func (x *SyncReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncReq.ProtoReflect.Descriptor instead.
func (*SyncReq) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{19}
}

func (x *SyncReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SyncDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncDataResp) Reset() {
	*x = SyncDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncDataResp) ProtoMessage() {}

func (x *SyncDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncDataResp.ProtoReflect.Descriptor instead.
func (*SyncDataResp) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{20}
}

type SyncLiveDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomName string    `protobuf:"bytes,2,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`
	Nation   string    `protobuf:"bytes,3,opt,name=nation,proto3" json:"nation,omitempty"`
	Province string    `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City     string    `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Address  string    `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Location *Location `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	State    int32     `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	Deleted  int32     `protobuf:"varint,9,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *SyncLiveDataReq) Reset() {
	*x = SyncLiveDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLiveDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLiveDataReq) ProtoMessage() {}

func (x *SyncLiveDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLiveDataReq.ProtoReflect.Descriptor instead.
func (*SyncLiveDataReq) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{21}
}

func (x *SyncLiveDataReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SyncLiveDataReq) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *SyncLiveDataReq) GetNation() string {
	if x != nil {
		return x.Nation
	}
	return ""
}

func (x *SyncLiveDataReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *SyncLiveDataReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SyncLiveDataReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SyncLiveDataReq) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *SyncLiveDataReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SyncLiveDataReq) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

type SyncFootprintDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Content   string    `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Nation    string    `protobuf:"bytes,3,opt,name=nation,proto3" json:"nation,omitempty"`
	Province  string    `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City      string    `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Address   string    `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Location  *Location `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	IsPublish int32     `protobuf:"varint,8,opt,name=is_publish,json=isPublish,proto3" json:"is_publish,omitempty"`
	State     int32     `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *SyncFootprintDataReq) Reset() {
	*x = SyncFootprintDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncFootprintDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncFootprintDataReq) ProtoMessage() {}

func (x *SyncFootprintDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncFootprintDataReq.ProtoReflect.Descriptor instead.
func (*SyncFootprintDataReq) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{22}
}

func (x *SyncFootprintDataReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SyncFootprintDataReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SyncFootprintDataReq) GetNation() string {
	if x != nil {
		return x.Nation
	}
	return ""
}

func (x *SyncFootprintDataReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *SyncFootprintDataReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SyncFootprintDataReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SyncFootprintDataReq) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *SyncFootprintDataReq) GetIsPublish() int32 {
	if x != nil {
		return x.IsPublish
	}
	return 0
}

func (x *SyncFootprintDataReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type SyncUserDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *SyncUserDataReq) Reset() {
	*x = SyncUserDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncUserDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncUserDataReq) ProtoMessage() {}

func (x *SyncUserDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncUserDataReq.ProtoReflect.Descriptor instead.
func (*SyncUserDataReq) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{23}
}

func (x *SyncUserDataReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SyncUserDataReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type SyncTopicDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TopicName string `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	State     int32  `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *SyncTopicDataReq) Reset() {
	*x = SyncTopicDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncTopicDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTopicDataReq) ProtoMessage() {}

func (x *SyncTopicDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTopicDataReq.ProtoReflect.Descriptor instead.
func (*SyncTopicDataReq) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{24}
}

func (x *SyncTopicDataReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SyncTopicDataReq) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *SyncTopicDataReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type SyncEncyclopediaDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Nation    string    `protobuf:"bytes,3,opt,name=nation,proto3" json:"nation,omitempty"`
	Province  string    `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City      string    `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Address   string    `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Location  *Location `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	IsPublish int32     `protobuf:"varint,8,opt,name=is_publish,json=isPublish,proto3" json:"is_publish,omitempty"`
}

func (x *SyncEncyclopediaDataReq) Reset() {
	*x = SyncEncyclopediaDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_search_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncEncyclopediaDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncEncyclopediaDataReq) ProtoMessage() {}

func (x *SyncEncyclopediaDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_search_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncEncyclopediaDataReq.ProtoReflect.Descriptor instead.
func (*SyncEncyclopediaDataReq) Descriptor() ([]byte, []int) {
	return file_search_search_proto_rawDescGZIP(), []int{25}
}

func (x *SyncEncyclopediaDataReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SyncEncyclopediaDataReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SyncEncyclopediaDataReq) GetNation() string {
	if x != nil {
		return x.Nation
	}
	return ""
}

func (x *SyncEncyclopediaDataReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *SyncEncyclopediaDataReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SyncEncyclopediaDataReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SyncEncyclopediaDataReq) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *SyncEncyclopediaDataReq) GetIsPublish() int32 {
	if x != nil {
		return x.IsPublish
	}
	return 0
}

var File_search_search_proto protoreflect.FileDescriptor

var file_search_search_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x71, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x72, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xfe, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x41, 0x72, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x6e, 0x63, 0x79,
	0x63, 0x6c, 0x6f, 0x70, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x65, 0x6e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x70, 0x65, 0x64,
	0x69, 0x61, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x61, 0x6e, 0x64, 0x73,
	0x63, 0x61, 0x70, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x92, 0x02, 0x0a, 0x0c, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x4f, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x05, 0x73, 0x69,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x69, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x73,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65,
	0x73, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x6f, 0x6f,
	0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x73, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x70, 0x65, 0x64, 0x69,
	0x61, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x6e, 0x63,
	0x79, 0x63, 0x6c, 0x6f, 0x70, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e,
	0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x49, 0x64, 0x73, 0x22, 0x75,
	0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x69, 0x74, 0x65, 0x41, 0x72, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x74, 0x65, 0x41, 0x72, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a,
	0x04, 0x53, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x22, 0x2c, 0x0a, 0x0d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x69, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x05, 0x73, 0x69,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x69, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x69, 0x74, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x69, 0x74, 0x79, 0x41, 0x72, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x7f, 0x0a,
	0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x69, 0x74, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x4f,
	0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x69, 0x74, 0x79, 0x4f, 0x75, 0x74, 0x12,
	0x28, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x69, 0x74, 0x79, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x52, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x38, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x73, 0x4f, 0x75,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x3d, 0x0a, 0x13, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x38, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x39, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x40, 0x0a,
	0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x70, 0x65,
	0x64, 0x69, 0x61, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x39, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x4f,
	0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x53, 0x0a, 0x1a, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x6e, 0x65, 0x41, 0x72, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x4a, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x57, 0x69,
	0x74, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x61, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x68, 0x61, 0x73, 0x22, 0x2e, 0x0a, 0x08, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x22, 0x19, 0x0a, 0x07, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0xf7, 0x01, 0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x4c,
	0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x22, 0xfe, 0x01, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x47, 0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x10, 0x53, 0x79,
	0x6e, 0x63, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x17, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x79,
	0x63, 0x6c, 0x6f, 0x70, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x32, 0xe8, 0x07,
	0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x29, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x12, 0x0d, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x41, 0x72, 0x67, 0x1a, 0x0d, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x4f, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x69, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x69, 0x74, 0x65, 0x41, 0x72, 0x67, 0x1a, 0x0e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x69, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x74, 0x65, 0x12, 0x15, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x74,
	0x65, 0x41, 0x72, 0x67, 0x1a, 0x0e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x69, 0x74,
	0x65, 0x4f, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x69,
	0x74, 0x79, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x69, 0x74, 0x79, 0x41,
	0x72, 0x67, 0x1a, 0x0e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x69, 0x74, 0x79, 0x4f,
	0x75, 0x74, 0x12, 0x2a, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x76, 0x65,
	0x73, 0x12, 0x0a, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x72, 0x67, 0x1a, 0x0f, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x34,
	0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x73, 0x12, 0x0a, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x72, 0x67, 0x1a, 0x14,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x73, 0x4f, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x0a, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x72, 0x67, 0x1a,
	0x0f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4f, 0x75, 0x74,
	0x12, 0x2c, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73,
	0x12, 0x0a, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x72, 0x67, 0x1a, 0x10, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x3a,
	0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x70,
	0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x0a, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x72,
	0x67, 0x1a, 0x17, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x63, 0x79, 0x63, 0x6c,
	0x6f, 0x70, 0x65, 0x64, 0x69, 0x61, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x0c, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x0a, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x41, 0x72, 0x67, 0x1a, 0x10, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x12, 0x0a, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x72, 0x67, 0x1a, 0x10, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x49, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x54, 0x0a, 0x17, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4f, 0x6e, 0x65, 0x12, 0x1b, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x6e, 0x65, 0x41, 0x72,
	0x67, 0x1a, 0x1c, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x57,
	0x69, 0x74, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2f, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x10, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x1a, 0x0d, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x39, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x46, 0x6f, 0x6f, 0x74,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x0c, 0x53,
	0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0d,
	0x53, 0x79, 0x6e, 0x63, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x11, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x1a, 0x0d, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3f, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x70, 0x65,
	0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e,
	0x63, 0x79, 0x63, 0x6c, 0x6f, 0x70, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x1a, 0x0d, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2c, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x4f, 0x66, 0x49, 0x64, 0x12, 0x08, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x1a,
	0x0d, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28,
	0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x08, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_search_search_proto_rawDescOnce sync.Once
	file_search_search_proto_rawDescData = file_search_search_proto_rawDesc
)

func file_search_search_proto_rawDescGZIP() []byte {
	file_search_search_proto_rawDescOnce.Do(func() {
		file_search_search_proto_rawDescData = protoimpl.X.CompressGZIP(file_search_search_proto_rawDescData)
	})
	return file_search_search_proto_rawDescData
}

var file_search_search_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_search_search_proto_goTypes = []interface{}{
	(*SearchArg)(nil),                   // 0: SearchArg
	(*SearchAllArg)(nil),                // 1: SearchAllArg
	(*SearchAllOut)(nil),                // 2: SearchAllOut
	(*SearchSiteArg)(nil),               // 3: SearchSiteArg
	(*SearchForeignSiteArg)(nil),        // 4: SearchForeignSiteArg
	(*Site)(nil),                        // 5: Site
	(*SearchSiteOut)(nil),               // 6: SearchSiteOut
	(*SearchCityArg)(nil),               // 7: SearchCityArg
	(*SearchCityTrans)(nil),             // 8: SearchCityTrans
	(*SearchCityOut)(nil),               // 9: SearchCityOut
	(*SearchLivesOut)(nil),              // 10: SearchLivesOut
	(*SearchFootprintsOut)(nil),         // 11: SearchFootprintsOut
	(*SearchUsersOut)(nil),              // 12: SearchUsersOut
	(*SearchTopicsOut)(nil),             // 13: SearchTopicsOut
	(*SearchEncyclopediasOut)(nil),      // 14: SearchEncyclopediasOut
	(*SearchIntIdsOut)(nil),             // 15: SearchIntIdsOut
	(*SearchTopicWithMatchOneArg)(nil),  // 16: SearchTopicWithMatchOneArg
	(*SearchTopicWithMatchOneResp)(nil), // 17: SearchTopicWithMatchOneResp
	(*Location)(nil),                    // 18: Location
	(*SyncReq)(nil),                     // 19: SyncReq
	(*SyncDataResp)(nil),                // 20: SyncDataResp
	(*SyncLiveDataReq)(nil),             // 21: SyncLiveDataReq
	(*SyncFootprintDataReq)(nil),        // 22: SyncFootprintDataReq
	(*SyncUserDataReq)(nil),             // 23: SyncUserDataReq
	(*SyncTopicDataReq)(nil),            // 24: SyncTopicDataReq
	(*SyncEncyclopediaDataReq)(nil),     // 25: SyncEncyclopediaDataReq
}
var file_search_search_proto_depIdxs = []int32{
	5,  // 0: SearchAllOut.sites:type_name -> Site
	5,  // 1: SearchSiteOut.sites:type_name -> Site
	8,  // 2: SearchCityOut.cities:type_name -> SearchCityTrans
	18, // 3: SyncLiveDataReq.location:type_name -> Location
	18, // 4: SyncFootprintDataReq.location:type_name -> Location
	18, // 5: SyncEncyclopediaDataReq.location:type_name -> Location
	1,  // 6: SearchService.SearchAll:input_type -> SearchAllArg
	3,  // 7: SearchService.SearchSite:input_type -> SearchSiteArg
	4,  // 8: SearchService.SearchForeignSite:input_type -> SearchForeignSiteArg
	7,  // 9: SearchService.SearchCity:input_type -> SearchCityArg
	0,  // 10: SearchService.SearchLives:input_type -> SearchArg
	0,  // 11: SearchService.SearchFootprints:input_type -> SearchArg
	0,  // 12: SearchService.SearchUsers:input_type -> SearchArg
	0,  // 13: SearchService.SearchTopics:input_type -> SearchArg
	0,  // 14: SearchService.SearchEncyclopedias:input_type -> SearchArg
	0,  // 15: SearchService.SearchVideos:input_type -> SearchArg
	0,  // 16: SearchService.SearchLandscape:input_type -> SearchArg
	16, // 17: SearchService.SearchTopicWithMatchOne:input_type -> SearchTopicWithMatchOneArg
	21, // 18: SearchService.SyncLiveData:input_type -> SyncLiveDataReq
	22, // 19: SearchService.SyncFootprintData:input_type -> SyncFootprintDataReq
	23, // 20: SearchService.SyncUserData:input_type -> SyncUserDataReq
	24, // 21: SearchService.SyncTopicData:input_type -> SyncTopicDataReq
	25, // 22: SearchService.SyncEncyclopediaData:input_type -> SyncEncyclopediaDataReq
	19, // 23: SearchService.SyncFootprintOfId:input_type -> SyncReq
	19, // 24: SearchService.SyncVideoData:input_type -> SyncReq
	2,  // 25: SearchService.SearchAll:output_type -> SearchAllOut
	6,  // 26: SearchService.SearchSite:output_type -> SearchSiteOut
	6,  // 27: SearchService.SearchForeignSite:output_type -> SearchSiteOut
	9,  // 28: SearchService.SearchCity:output_type -> SearchCityOut
	10, // 29: SearchService.SearchLives:output_type -> SearchLivesOut
	11, // 30: SearchService.SearchFootprints:output_type -> SearchFootprintsOut
	12, // 31: SearchService.SearchUsers:output_type -> SearchUsersOut
	13, // 32: SearchService.SearchTopics:output_type -> SearchTopicsOut
	14, // 33: SearchService.SearchEncyclopedias:output_type -> SearchEncyclopediasOut
	15, // 34: SearchService.SearchVideos:output_type -> SearchIntIdsOut
	15, // 35: SearchService.SearchLandscape:output_type -> SearchIntIdsOut
	17, // 36: SearchService.SearchTopicWithMatchOne:output_type -> SearchTopicWithMatchOneResp
	20, // 37: SearchService.SyncLiveData:output_type -> SyncDataResp
	20, // 38: SearchService.SyncFootprintData:output_type -> SyncDataResp
	20, // 39: SearchService.SyncUserData:output_type -> SyncDataResp
	20, // 40: SearchService.SyncTopicData:output_type -> SyncDataResp
	20, // 41: SearchService.SyncEncyclopediaData:output_type -> SyncDataResp
	20, // 42: SearchService.SyncFootprintOfId:output_type -> SyncDataResp
	20, // 43: SearchService.SyncVideoData:output_type -> SyncDataResp
	25, // [25:44] is the sub-list for method output_type
	6,  // [6:25] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_search_search_proto_init() }
func file_search_search_proto_init() {
	if File_search_search_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_search_search_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAllArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAllOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSiteArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchForeignSiteArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Site); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSiteOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCityArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCityTrans); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCityOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLivesOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFootprintsOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUsersOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTopicsOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEncyclopediasOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchIntIdsOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTopicWithMatchOneArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTopicWithMatchOneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLiveDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncFootprintDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncUserDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncTopicDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_search_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncEncyclopediaDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_search_search_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_search_search_proto_goTypes,
		DependencyIndexes: file_search_search_proto_depIdxs,
		MessageInfos:      file_search_search_proto_msgTypes,
	}.Build()
	File_search_search_proto = out.File
	file_search_search_proto_rawDesc = nil
	file_search_search_proto_goTypes = nil
	file_search_search_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SearchServiceClient is the client API for SearchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchServiceClient interface {
	// 搜索全部
	SearchAll(ctx context.Context, in *SearchAllArg, opts ...grpc.CallOption) (*SearchAllOut, error)
	// 搜索地点
	SearchSite(ctx context.Context, in *SearchSiteArg, opts ...grpc.CallOption) (*SearchSiteOut, error)
	// 搜索国外地点
	SearchForeignSite(ctx context.Context, in *SearchForeignSiteArg, opts ...grpc.CallOption) (*SearchSiteOut, error)
	// 搜索城市
	SearchCity(ctx context.Context, in *SearchCityArg, opts ...grpc.CallOption) (*SearchCityOut, error)
	// 搜索全直播
	SearchLives(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchLivesOut, error)
	// 搜索足迹
	SearchFootprints(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchFootprintsOut, error)
	// 搜索用户
	SearchUsers(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchUsersOut, error)
	// 搜索话题
	SearchTopics(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchTopicsOut, error)
	// 搜索百科
	SearchEncyclopedias(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchEncyclopediasOut, error)
	// 搜索视频
	SearchVideos(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchIntIdsOut, error)
	// 搜索景区
	SearchLandscape(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchIntIdsOut, error)
	// 使用文本完全匹配搜索话题
	SearchTopicWithMatchOne(ctx context.Context, in *SearchTopicWithMatchOneArg, opts ...grpc.CallOption) (*SearchTopicWithMatchOneResp, error)
	// 同步全直播数据
	SyncLiveData(ctx context.Context, in *SyncLiveDataReq, opts ...grpc.CallOption) (*SyncDataResp, error)
	// 同步足迹数据
	SyncFootprintData(ctx context.Context, in *SyncFootprintDataReq, opts ...grpc.CallOption) (*SyncDataResp, error)
	// 同步用户数据
	SyncUserData(ctx context.Context, in *SyncUserDataReq, opts ...grpc.CallOption) (*SyncDataResp, error)
	// 同步话题数据
	SyncTopicData(ctx context.Context, in *SyncTopicDataReq, opts ...grpc.CallOption) (*SyncDataResp, error)
	// 同步百科数据
	SyncEncyclopediaData(ctx context.Context, in *SyncEncyclopediaDataReq, opts ...grpc.CallOption) (*SyncDataResp, error)
	// 同步足迹数据, 仅需要id
	SyncFootprintOfId(ctx context.Context, in *SyncReq, opts ...grpc.CallOption) (*SyncDataResp, error)
	// 同步视频数据
	SyncVideoData(ctx context.Context, in *SyncReq, opts ...grpc.CallOption) (*SyncDataResp, error)
}

type searchServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSearchServiceClient(cc grpc.ClientConnInterface) SearchServiceClient {
	return &searchServiceClient{cc}
}

func (c *searchServiceClient) SearchAll(ctx context.Context, in *SearchAllArg, opts ...grpc.CallOption) (*SearchAllOut, error) {
	out := new(SearchAllOut)
	err := c.cc.Invoke(ctx, "/SearchService/SearchAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SearchSite(ctx context.Context, in *SearchSiteArg, opts ...grpc.CallOption) (*SearchSiteOut, error) {
	out := new(SearchSiteOut)
	err := c.cc.Invoke(ctx, "/SearchService/SearchSite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SearchForeignSite(ctx context.Context, in *SearchForeignSiteArg, opts ...grpc.CallOption) (*SearchSiteOut, error) {
	out := new(SearchSiteOut)
	err := c.cc.Invoke(ctx, "/SearchService/SearchForeignSite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SearchCity(ctx context.Context, in *SearchCityArg, opts ...grpc.CallOption) (*SearchCityOut, error) {
	out := new(SearchCityOut)
	err := c.cc.Invoke(ctx, "/SearchService/SearchCity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SearchLives(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchLivesOut, error) {
	out := new(SearchLivesOut)
	err := c.cc.Invoke(ctx, "/SearchService/SearchLives", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SearchFootprints(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchFootprintsOut, error) {
	out := new(SearchFootprintsOut)
	err := c.cc.Invoke(ctx, "/SearchService/SearchFootprints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SearchUsers(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchUsersOut, error) {
	out := new(SearchUsersOut)
	err := c.cc.Invoke(ctx, "/SearchService/SearchUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SearchTopics(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchTopicsOut, error) {
	out := new(SearchTopicsOut)
	err := c.cc.Invoke(ctx, "/SearchService/SearchTopics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SearchEncyclopedias(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchEncyclopediasOut, error) {
	out := new(SearchEncyclopediasOut)
	err := c.cc.Invoke(ctx, "/SearchService/SearchEncyclopedias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SearchVideos(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchIntIdsOut, error) {
	out := new(SearchIntIdsOut)
	err := c.cc.Invoke(ctx, "/SearchService/SearchVideos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SearchLandscape(ctx context.Context, in *SearchArg, opts ...grpc.CallOption) (*SearchIntIdsOut, error) {
	out := new(SearchIntIdsOut)
	err := c.cc.Invoke(ctx, "/SearchService/SearchLandscape", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SearchTopicWithMatchOne(ctx context.Context, in *SearchTopicWithMatchOneArg, opts ...grpc.CallOption) (*SearchTopicWithMatchOneResp, error) {
	out := new(SearchTopicWithMatchOneResp)
	err := c.cc.Invoke(ctx, "/SearchService/SearchTopicWithMatchOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SyncLiveData(ctx context.Context, in *SyncLiveDataReq, opts ...grpc.CallOption) (*SyncDataResp, error) {
	out := new(SyncDataResp)
	err := c.cc.Invoke(ctx, "/SearchService/SyncLiveData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SyncFootprintData(ctx context.Context, in *SyncFootprintDataReq, opts ...grpc.CallOption) (*SyncDataResp, error) {
	out := new(SyncDataResp)
	err := c.cc.Invoke(ctx, "/SearchService/SyncFootprintData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SyncUserData(ctx context.Context, in *SyncUserDataReq, opts ...grpc.CallOption) (*SyncDataResp, error) {
	out := new(SyncDataResp)
	err := c.cc.Invoke(ctx, "/SearchService/SyncUserData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SyncTopicData(ctx context.Context, in *SyncTopicDataReq, opts ...grpc.CallOption) (*SyncDataResp, error) {
	out := new(SyncDataResp)
	err := c.cc.Invoke(ctx, "/SearchService/SyncTopicData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SyncEncyclopediaData(ctx context.Context, in *SyncEncyclopediaDataReq, opts ...grpc.CallOption) (*SyncDataResp, error) {
	out := new(SyncDataResp)
	err := c.cc.Invoke(ctx, "/SearchService/SyncEncyclopediaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SyncFootprintOfId(ctx context.Context, in *SyncReq, opts ...grpc.CallOption) (*SyncDataResp, error) {
	out := new(SyncDataResp)
	err := c.cc.Invoke(ctx, "/SearchService/SyncFootprintOfId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SyncVideoData(ctx context.Context, in *SyncReq, opts ...grpc.CallOption) (*SyncDataResp, error) {
	out := new(SyncDataResp)
	err := c.cc.Invoke(ctx, "/SearchService/SyncVideoData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SearchServiceServer is the server API for SearchService service.
type SearchServiceServer interface {
	// 搜索全部
	SearchAll(context.Context, *SearchAllArg) (*SearchAllOut, error)
	// 搜索地点
	SearchSite(context.Context, *SearchSiteArg) (*SearchSiteOut, error)
	// 搜索国外地点
	SearchForeignSite(context.Context, *SearchForeignSiteArg) (*SearchSiteOut, error)
	// 搜索城市
	SearchCity(context.Context, *SearchCityArg) (*SearchCityOut, error)
	// 搜索全直播
	SearchLives(context.Context, *SearchArg) (*SearchLivesOut, error)
	// 搜索足迹
	SearchFootprints(context.Context, *SearchArg) (*SearchFootprintsOut, error)
	// 搜索用户
	SearchUsers(context.Context, *SearchArg) (*SearchUsersOut, error)
	// 搜索话题
	SearchTopics(context.Context, *SearchArg) (*SearchTopicsOut, error)
	// 搜索百科
	SearchEncyclopedias(context.Context, *SearchArg) (*SearchEncyclopediasOut, error)
	// 搜索视频
	SearchVideos(context.Context, *SearchArg) (*SearchIntIdsOut, error)
	// 搜索景区
	SearchLandscape(context.Context, *SearchArg) (*SearchIntIdsOut, error)
	// 使用文本完全匹配搜索话题
	SearchTopicWithMatchOne(context.Context, *SearchTopicWithMatchOneArg) (*SearchTopicWithMatchOneResp, error)
	// 同步全直播数据
	SyncLiveData(context.Context, *SyncLiveDataReq) (*SyncDataResp, error)
	// 同步足迹数据
	SyncFootprintData(context.Context, *SyncFootprintDataReq) (*SyncDataResp, error)
	// 同步用户数据
	SyncUserData(context.Context, *SyncUserDataReq) (*SyncDataResp, error)
	// 同步话题数据
	SyncTopicData(context.Context, *SyncTopicDataReq) (*SyncDataResp, error)
	// 同步百科数据
	SyncEncyclopediaData(context.Context, *SyncEncyclopediaDataReq) (*SyncDataResp, error)
	// 同步足迹数据, 仅需要id
	SyncFootprintOfId(context.Context, *SyncReq) (*SyncDataResp, error)
	// 同步视频数据
	SyncVideoData(context.Context, *SyncReq) (*SyncDataResp, error)
}

// UnimplementedSearchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSearchServiceServer struct {
}

func (*UnimplementedSearchServiceServer) SearchAll(context.Context, *SearchAllArg) (*SearchAllOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchAll not implemented")
}
func (*UnimplementedSearchServiceServer) SearchSite(context.Context, *SearchSiteArg) (*SearchSiteOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchSite not implemented")
}
func (*UnimplementedSearchServiceServer) SearchForeignSite(context.Context, *SearchForeignSiteArg) (*SearchSiteOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForeignSite not implemented")
}
func (*UnimplementedSearchServiceServer) SearchCity(context.Context, *SearchCityArg) (*SearchCityOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchCity not implemented")
}
func (*UnimplementedSearchServiceServer) SearchLives(context.Context, *SearchArg) (*SearchLivesOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchLives not implemented")
}
func (*UnimplementedSearchServiceServer) SearchFootprints(context.Context, *SearchArg) (*SearchFootprintsOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchFootprints not implemented")
}
func (*UnimplementedSearchServiceServer) SearchUsers(context.Context, *SearchArg) (*SearchUsersOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchUsers not implemented")
}
func (*UnimplementedSearchServiceServer) SearchTopics(context.Context, *SearchArg) (*SearchTopicsOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchTopics not implemented")
}
func (*UnimplementedSearchServiceServer) SearchEncyclopedias(context.Context, *SearchArg) (*SearchEncyclopediasOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchEncyclopedias not implemented")
}
func (*UnimplementedSearchServiceServer) SearchVideos(context.Context, *SearchArg) (*SearchIntIdsOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchVideos not implemented")
}
func (*UnimplementedSearchServiceServer) SearchLandscape(context.Context, *SearchArg) (*SearchIntIdsOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchLandscape not implemented")
}
func (*UnimplementedSearchServiceServer) SearchTopicWithMatchOne(context.Context, *SearchTopicWithMatchOneArg) (*SearchTopicWithMatchOneResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchTopicWithMatchOne not implemented")
}
func (*UnimplementedSearchServiceServer) SyncLiveData(context.Context, *SyncLiveDataReq) (*SyncDataResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncLiveData not implemented")
}
func (*UnimplementedSearchServiceServer) SyncFootprintData(context.Context, *SyncFootprintDataReq) (*SyncDataResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncFootprintData not implemented")
}
func (*UnimplementedSearchServiceServer) SyncUserData(context.Context, *SyncUserDataReq) (*SyncDataResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncUserData not implemented")
}
func (*UnimplementedSearchServiceServer) SyncTopicData(context.Context, *SyncTopicDataReq) (*SyncDataResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncTopicData not implemented")
}
func (*UnimplementedSearchServiceServer) SyncEncyclopediaData(context.Context, *SyncEncyclopediaDataReq) (*SyncDataResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncEncyclopediaData not implemented")
}
func (*UnimplementedSearchServiceServer) SyncFootprintOfId(context.Context, *SyncReq) (*SyncDataResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncFootprintOfId not implemented")
}
func (*UnimplementedSearchServiceServer) SyncVideoData(context.Context, *SyncReq) (*SyncDataResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncVideoData not implemented")
}

func RegisterSearchServiceServer(s *grpc.Server, srv SearchServiceServer) {
	s.RegisterService(&_SearchService_serviceDesc, srv)
}

func _SearchService_SearchAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchAllArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SearchAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchAll(ctx, req.(*SearchAllArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SearchSite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchSiteArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchSite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SearchSite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchSite(ctx, req.(*SearchSiteArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SearchForeignSite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchForeignSiteArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchForeignSite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SearchForeignSite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchForeignSite(ctx, req.(*SearchForeignSiteArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SearchCity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchCityArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchCity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SearchCity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchCity(ctx, req.(*SearchCityArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SearchLives_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchLives(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SearchLives",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchLives(ctx, req.(*SearchArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SearchFootprints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchFootprints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SearchFootprints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchFootprints(ctx, req.(*SearchArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SearchUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SearchUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchUsers(ctx, req.(*SearchArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SearchTopics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchTopics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SearchTopics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchTopics(ctx, req.(*SearchArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SearchEncyclopedias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchEncyclopedias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SearchEncyclopedias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchEncyclopedias(ctx, req.(*SearchArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SearchVideos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchVideos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SearchVideos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchVideos(ctx, req.(*SearchArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SearchLandscape_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchLandscape(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SearchLandscape",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchLandscape(ctx, req.(*SearchArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SearchTopicWithMatchOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchTopicWithMatchOneArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchTopicWithMatchOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SearchTopicWithMatchOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchTopicWithMatchOne(ctx, req.(*SearchTopicWithMatchOneArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SyncLiveData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncLiveDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SyncLiveData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SyncLiveData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SyncLiveData(ctx, req.(*SyncLiveDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SyncFootprintData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncFootprintDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SyncFootprintData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SyncFootprintData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SyncFootprintData(ctx, req.(*SyncFootprintDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SyncUserData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncUserDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SyncUserData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SyncUserData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SyncUserData(ctx, req.(*SyncUserDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SyncTopicData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncTopicDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SyncTopicData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SyncTopicData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SyncTopicData(ctx, req.(*SyncTopicDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SyncEncyclopediaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncEncyclopediaDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SyncEncyclopediaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SyncEncyclopediaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SyncEncyclopediaData(ctx, req.(*SyncEncyclopediaDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SyncFootprintOfId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SyncFootprintOfId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SyncFootprintOfId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SyncFootprintOfId(ctx, req.(*SyncReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SyncVideoData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SyncVideoData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SearchService/SyncVideoData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SyncVideoData(ctx, req.(*SyncReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SearchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SearchService",
	HandlerType: (*SearchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchAll",
			Handler:    _SearchService_SearchAll_Handler,
		},
		{
			MethodName: "SearchSite",
			Handler:    _SearchService_SearchSite_Handler,
		},
		{
			MethodName: "SearchForeignSite",
			Handler:    _SearchService_SearchForeignSite_Handler,
		},
		{
			MethodName: "SearchCity",
			Handler:    _SearchService_SearchCity_Handler,
		},
		{
			MethodName: "SearchLives",
			Handler:    _SearchService_SearchLives_Handler,
		},
		{
			MethodName: "SearchFootprints",
			Handler:    _SearchService_SearchFootprints_Handler,
		},
		{
			MethodName: "SearchUsers",
			Handler:    _SearchService_SearchUsers_Handler,
		},
		{
			MethodName: "SearchTopics",
			Handler:    _SearchService_SearchTopics_Handler,
		},
		{
			MethodName: "SearchEncyclopedias",
			Handler:    _SearchService_SearchEncyclopedias_Handler,
		},
		{
			MethodName: "SearchVideos",
			Handler:    _SearchService_SearchVideos_Handler,
		},
		{
			MethodName: "SearchLandscape",
			Handler:    _SearchService_SearchLandscape_Handler,
		},
		{
			MethodName: "SearchTopicWithMatchOne",
			Handler:    _SearchService_SearchTopicWithMatchOne_Handler,
		},
		{
			MethodName: "SyncLiveData",
			Handler:    _SearchService_SyncLiveData_Handler,
		},
		{
			MethodName: "SyncFootprintData",
			Handler:    _SearchService_SyncFootprintData_Handler,
		},
		{
			MethodName: "SyncUserData",
			Handler:    _SearchService_SyncUserData_Handler,
		},
		{
			MethodName: "SyncTopicData",
			Handler:    _SearchService_SyncTopicData_Handler,
		},
		{
			MethodName: "SyncEncyclopediaData",
			Handler:    _SearchService_SyncEncyclopediaData_Handler,
		},
		{
			MethodName: "SyncFootprintOfId",
			Handler:    _SearchService_SyncFootprintOfId_Handler,
		},
		{
			MethodName: "SyncVideoData",
			Handler:    _SearchService_SyncVideoData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search/search.proto",
}
