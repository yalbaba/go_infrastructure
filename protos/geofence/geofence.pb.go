// Code generated by protoc-gen-go. DO NOT EDIT.
// source: geofence/geofence.proto

package geofence

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetChinaProvinceReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChinaProvinceReq) Reset()         { *m = GetChinaProvinceReq{} }
func (m *GetChinaProvinceReq) String() string { return proto.CompactTextString(m) }
func (*GetChinaProvinceReq) ProtoMessage()    {}
func (*GetChinaProvinceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{0}
}

func (m *GetChinaProvinceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChinaProvinceReq.Unmarshal(m, b)
}
func (m *GetChinaProvinceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChinaProvinceReq.Marshal(b, m, deterministic)
}
func (m *GetChinaProvinceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChinaProvinceReq.Merge(m, src)
}
func (m *GetChinaProvinceReq) XXX_Size() int {
	return xxx_messageInfo_GetChinaProvinceReq.Size(m)
}
func (m *GetChinaProvinceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChinaProvinceReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetChinaProvinceReq proto.InternalMessageInfo

type GetChinaProvinceResp struct {
	Provinces            []*Province `protobuf:"bytes,1,rep,name=provinces,proto3" json:"provinces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetChinaProvinceResp) Reset()         { *m = GetChinaProvinceResp{} }
func (m *GetChinaProvinceResp) String() string { return proto.CompactTextString(m) }
func (*GetChinaProvinceResp) ProtoMessage()    {}
func (*GetChinaProvinceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{1}
}

func (m *GetChinaProvinceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChinaProvinceResp.Unmarshal(m, b)
}
func (m *GetChinaProvinceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChinaProvinceResp.Marshal(b, m, deterministic)
}
func (m *GetChinaProvinceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChinaProvinceResp.Merge(m, src)
}
func (m *GetChinaProvinceResp) XXX_Size() int {
	return xxx_messageInfo_GetChinaProvinceResp.Size(m)
}
func (m *GetChinaProvinceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChinaProvinceResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChinaProvinceResp proto.InternalMessageInfo

func (m *GetChinaProvinceResp) GetProvinces() []*Province {
	if m != nil {
		return m.Provinces
	}
	return nil
}

type Province struct {
	ProvinceName         string   `protobuf:"bytes,1,opt,name=province_name,json=provinceName,proto3" json:"province_name,omitempty"`
	Adcode               string   `protobuf:"bytes,2,opt,name=adcode,proto3" json:"adcode,omitempty"`
	Lon                  string   `protobuf:"bytes,3,opt,name=lon,proto3" json:"lon,omitempty"`
	Lat                  string   `protobuf:"bytes,4,opt,name=lat,proto3" json:"lat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Province) Reset()         { *m = Province{} }
func (m *Province) String() string { return proto.CompactTextString(m) }
func (*Province) ProtoMessage()    {}
func (*Province) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{2}
}

func (m *Province) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Province.Unmarshal(m, b)
}
func (m *Province) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Province.Marshal(b, m, deterministic)
}
func (m *Province) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Province.Merge(m, src)
}
func (m *Province) XXX_Size() int {
	return xxx_messageInfo_Province.Size(m)
}
func (m *Province) XXX_DiscardUnknown() {
	xxx_messageInfo_Province.DiscardUnknown(m)
}

var xxx_messageInfo_Province proto.InternalMessageInfo

func (m *Province) GetProvinceName() string {
	if m != nil {
		return m.ProvinceName
	}
	return ""
}

func (m *Province) GetAdcode() string {
	if m != nil {
		return m.Adcode
	}
	return ""
}

func (m *Province) GetLon() string {
	if m != nil {
		return m.Lon
	}
	return ""
}

func (m *Province) GetLat() string {
	if m != nil {
		return m.Lat
	}
	return ""
}

type SearchForeignCountryReq struct {
	ContinentId          int64    `protobuf:"varint,1,opt,name=continent_id,json=continentId,proto3" json:"continent_id,omitempty"`
	CountryName          string   `protobuf:"bytes,2,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchForeignCountryReq) Reset()         { *m = SearchForeignCountryReq{} }
func (m *SearchForeignCountryReq) String() string { return proto.CompactTextString(m) }
func (*SearchForeignCountryReq) ProtoMessage()    {}
func (*SearchForeignCountryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{3}
}

func (m *SearchForeignCountryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchForeignCountryReq.Unmarshal(m, b)
}
func (m *SearchForeignCountryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchForeignCountryReq.Marshal(b, m, deterministic)
}
func (m *SearchForeignCountryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchForeignCountryReq.Merge(m, src)
}
func (m *SearchForeignCountryReq) XXX_Size() int {
	return xxx_messageInfo_SearchForeignCountryReq.Size(m)
}
func (m *SearchForeignCountryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchForeignCountryReq.DiscardUnknown(m)
}

var xxx_messageInfo_SearchForeignCountryReq proto.InternalMessageInfo

func (m *SearchForeignCountryReq) GetContinentId() int64 {
	if m != nil {
		return m.ContinentId
	}
	return 0
}

func (m *SearchForeignCountryReq) GetCountryName() string {
	if m != nil {
		return m.CountryName
	}
	return ""
}

type SearchForeignCountryResp struct {
	Countries            []*Country `protobuf:"bytes,1,rep,name=countries,proto3" json:"countries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SearchForeignCountryResp) Reset()         { *m = SearchForeignCountryResp{} }
func (m *SearchForeignCountryResp) String() string { return proto.CompactTextString(m) }
func (*SearchForeignCountryResp) ProtoMessage()    {}
func (*SearchForeignCountryResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{4}
}

func (m *SearchForeignCountryResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchForeignCountryResp.Unmarshal(m, b)
}
func (m *SearchForeignCountryResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchForeignCountryResp.Marshal(b, m, deterministic)
}
func (m *SearchForeignCountryResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchForeignCountryResp.Merge(m, src)
}
func (m *SearchForeignCountryResp) XXX_Size() int {
	return xxx_messageInfo_SearchForeignCountryResp.Size(m)
}
func (m *SearchForeignCountryResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchForeignCountryResp.DiscardUnknown(m)
}

var xxx_messageInfo_SearchForeignCountryResp proto.InternalMessageInfo

func (m *SearchForeignCountryResp) GetCountries() []*Country {
	if m != nil {
		return m.Countries
	}
	return nil
}

type Country struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Cname                string   `protobuf:"bytes,3,opt,name=cname,proto3" json:"cname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Country) Reset()         { *m = Country{} }
func (m *Country) String() string { return proto.CompactTextString(m) }
func (*Country) ProtoMessage()    {}
func (*Country) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{5}
}

func (m *Country) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Country.Unmarshal(m, b)
}
func (m *Country) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Country.Marshal(b, m, deterministic)
}
func (m *Country) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Country.Merge(m, src)
}
func (m *Country) XXX_Size() int {
	return xxx_messageInfo_Country.Size(m)
}
func (m *Country) XXX_DiscardUnknown() {
	xxx_messageInfo_Country.DiscardUnknown(m)
}

var xxx_messageInfo_Country proto.InternalMessageInfo

func (m *Country) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Country) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Country) GetCname() string {
	if m != nil {
		return m.Cname
	}
	return ""
}

type SearchForeignCountryProvinceReq struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	ProvinceName         string   `protobuf:"bytes,2,opt,name=province_name,json=provinceName,proto3" json:"province_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchForeignCountryProvinceReq) Reset()         { *m = SearchForeignCountryProvinceReq{} }
func (m *SearchForeignCountryProvinceReq) String() string { return proto.CompactTextString(m) }
func (*SearchForeignCountryProvinceReq) ProtoMessage()    {}
func (*SearchForeignCountryProvinceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{6}
}

func (m *SearchForeignCountryProvinceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchForeignCountryProvinceReq.Unmarshal(m, b)
}
func (m *SearchForeignCountryProvinceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchForeignCountryProvinceReq.Marshal(b, m, deterministic)
}
func (m *SearchForeignCountryProvinceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchForeignCountryProvinceReq.Merge(m, src)
}
func (m *SearchForeignCountryProvinceReq) XXX_Size() int {
	return xxx_messageInfo_SearchForeignCountryProvinceReq.Size(m)
}
func (m *SearchForeignCountryProvinceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchForeignCountryProvinceReq.DiscardUnknown(m)
}

var xxx_messageInfo_SearchForeignCountryProvinceReq proto.InternalMessageInfo

func (m *SearchForeignCountryProvinceReq) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SearchForeignCountryProvinceReq) GetProvinceName() string {
	if m != nil {
		return m.ProvinceName
	}
	return ""
}

type SearchForeignCountryProvinceResp struct {
	ForeignCountryProvince []*ForeignCountryProvince `protobuf:"bytes,1,rep,name=foreign_country_province,json=foreignCountryProvince,proto3" json:"foreign_country_province,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                  `json:"-"`
	XXX_unrecognized       []byte                    `json:"-"`
	XXX_sizecache          int32                     `json:"-"`
}

func (m *SearchForeignCountryProvinceResp) Reset()         { *m = SearchForeignCountryProvinceResp{} }
func (m *SearchForeignCountryProvinceResp) String() string { return proto.CompactTextString(m) }
func (*SearchForeignCountryProvinceResp) ProtoMessage()    {}
func (*SearchForeignCountryProvinceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{7}
}

func (m *SearchForeignCountryProvinceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchForeignCountryProvinceResp.Unmarshal(m, b)
}
func (m *SearchForeignCountryProvinceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchForeignCountryProvinceResp.Marshal(b, m, deterministic)
}
func (m *SearchForeignCountryProvinceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchForeignCountryProvinceResp.Merge(m, src)
}
func (m *SearchForeignCountryProvinceResp) XXX_Size() int {
	return xxx_messageInfo_SearchForeignCountryProvinceResp.Size(m)
}
func (m *SearchForeignCountryProvinceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchForeignCountryProvinceResp.DiscardUnknown(m)
}

var xxx_messageInfo_SearchForeignCountryProvinceResp proto.InternalMessageInfo

func (m *SearchForeignCountryProvinceResp) GetForeignCountryProvince() []*ForeignCountryProvince {
	if m != nil {
		return m.ForeignCountryProvince
	}
	return nil
}

type ForeignCountryProvince struct {
	ProvinceName         string   `protobuf:"bytes,1,opt,name=province_name,json=provinceName,proto3" json:"province_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForeignCountryProvince) Reset()         { *m = ForeignCountryProvince{} }
func (m *ForeignCountryProvince) String() string { return proto.CompactTextString(m) }
func (*ForeignCountryProvince) ProtoMessage()    {}
func (*ForeignCountryProvince) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{8}
}

func (m *ForeignCountryProvince) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForeignCountryProvince.Unmarshal(m, b)
}
func (m *ForeignCountryProvince) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForeignCountryProvince.Marshal(b, m, deterministic)
}
func (m *ForeignCountryProvince) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForeignCountryProvince.Merge(m, src)
}
func (m *ForeignCountryProvince) XXX_Size() int {
	return xxx_messageInfo_ForeignCountryProvince.Size(m)
}
func (m *ForeignCountryProvince) XXX_DiscardUnknown() {
	xxx_messageInfo_ForeignCountryProvince.DiscardUnknown(m)
}

var xxx_messageInfo_ForeignCountryProvince proto.InternalMessageInfo

func (m *ForeignCountryProvince) GetProvinceName() string {
	if m != nil {
		return m.ProvinceName
	}
	return ""
}

type SearchForeignCountryCityReq struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	ProvinceName         string   `protobuf:"bytes,2,opt,name=province_name,json=provinceName,proto3" json:"province_name,omitempty"`
	CityName             string   `protobuf:"bytes,3,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchForeignCountryCityReq) Reset()         { *m = SearchForeignCountryCityReq{} }
func (m *SearchForeignCountryCityReq) String() string { return proto.CompactTextString(m) }
func (*SearchForeignCountryCityReq) ProtoMessage()    {}
func (*SearchForeignCountryCityReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{9}
}

func (m *SearchForeignCountryCityReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchForeignCountryCityReq.Unmarshal(m, b)
}
func (m *SearchForeignCountryCityReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchForeignCountryCityReq.Marshal(b, m, deterministic)
}
func (m *SearchForeignCountryCityReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchForeignCountryCityReq.Merge(m, src)
}
func (m *SearchForeignCountryCityReq) XXX_Size() int {
	return xxx_messageInfo_SearchForeignCountryCityReq.Size(m)
}
func (m *SearchForeignCountryCityReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchForeignCountryCityReq.DiscardUnknown(m)
}

var xxx_messageInfo_SearchForeignCountryCityReq proto.InternalMessageInfo

func (m *SearchForeignCountryCityReq) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SearchForeignCountryCityReq) GetProvinceName() string {
	if m != nil {
		return m.ProvinceName
	}
	return ""
}

func (m *SearchForeignCountryCityReq) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

type SearchForeignCountryCityResp struct {
	ForeignCountryCity   []*ForeignCountryCity `protobuf:"bytes,1,rep,name=foreign_country_city,json=foreignCountryCity,proto3" json:"foreign_country_city,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SearchForeignCountryCityResp) Reset()         { *m = SearchForeignCountryCityResp{} }
func (m *SearchForeignCountryCityResp) String() string { return proto.CompactTextString(m) }
func (*SearchForeignCountryCityResp) ProtoMessage()    {}
func (*SearchForeignCountryCityResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{10}
}

func (m *SearchForeignCountryCityResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchForeignCountryCityResp.Unmarshal(m, b)
}
func (m *SearchForeignCountryCityResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchForeignCountryCityResp.Marshal(b, m, deterministic)
}
func (m *SearchForeignCountryCityResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchForeignCountryCityResp.Merge(m, src)
}
func (m *SearchForeignCountryCityResp) XXX_Size() int {
	return xxx_messageInfo_SearchForeignCountryCityResp.Size(m)
}
func (m *SearchForeignCountryCityResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchForeignCountryCityResp.DiscardUnknown(m)
}

var xxx_messageInfo_SearchForeignCountryCityResp proto.InternalMessageInfo

func (m *SearchForeignCountryCityResp) GetForeignCountryCity() []*ForeignCountryCity {
	if m != nil {
		return m.ForeignCountryCity
	}
	return nil
}

type ForeignCountryCity struct {
	CityName             string   `protobuf:"bytes,1,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForeignCountryCity) Reset()         { *m = ForeignCountryCity{} }
func (m *ForeignCountryCity) String() string { return proto.CompactTextString(m) }
func (*ForeignCountryCity) ProtoMessage()    {}
func (*ForeignCountryCity) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{11}
}

func (m *ForeignCountryCity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForeignCountryCity.Unmarshal(m, b)
}
func (m *ForeignCountryCity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForeignCountryCity.Marshal(b, m, deterministic)
}
func (m *ForeignCountryCity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForeignCountryCity.Merge(m, src)
}
func (m *ForeignCountryCity) XXX_Size() int {
	return xxx_messageInfo_ForeignCountryCity.Size(m)
}
func (m *ForeignCountryCity) XXX_DiscardUnknown() {
	xxx_messageInfo_ForeignCountryCity.DiscardUnknown(m)
}

var xxx_messageInfo_ForeignCountryCity proto.InternalMessageInfo

func (m *ForeignCountryCity) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

type SearchCityReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchCityReq) Reset()         { *m = SearchCityReq{} }
func (m *SearchCityReq) String() string { return proto.CompactTextString(m) }
func (*SearchCityReq) ProtoMessage()    {}
func (*SearchCityReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{12}
}

func (m *SearchCityReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchCityReq.Unmarshal(m, b)
}
func (m *SearchCityReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchCityReq.Marshal(b, m, deterministic)
}
func (m *SearchCityReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchCityReq.Merge(m, src)
}
func (m *SearchCityReq) XXX_Size() int {
	return xxx_messageInfo_SearchCityReq.Size(m)
}
func (m *SearchCityReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchCityReq.DiscardUnknown(m)
}

var xxx_messageInfo_SearchCityReq proto.InternalMessageInfo

func (m *SearchCityReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SearchCityResp struct {
	Position             []*Position `protobuf:"bytes,1,rep,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SearchCityResp) Reset()         { *m = SearchCityResp{} }
func (m *SearchCityResp) String() string { return proto.CompactTextString(m) }
func (*SearchCityResp) ProtoMessage()    {}
func (*SearchCityResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{13}
}

func (m *SearchCityResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchCityResp.Unmarshal(m, b)
}
func (m *SearchCityResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchCityResp.Marshal(b, m, deterministic)
}
func (m *SearchCityResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchCityResp.Merge(m, src)
}
func (m *SearchCityResp) XXX_Size() int {
	return xxx_messageInfo_SearchCityResp.Size(m)
}
func (m *SearchCityResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchCityResp.DiscardUnknown(m)
}

var xxx_messageInfo_SearchCityResp proto.InternalMessageInfo

func (m *SearchCityResp) GetPosition() []*Position {
	if m != nil {
		return m.Position
	}
	return nil
}

type Position struct {
	Nation               string   `protobuf:"bytes,1,opt,name=nation,proto3" json:"nation,omitempty"`
	Province             string   `protobuf:"bytes,2,opt,name=province,proto3" json:"province,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	County               string   `protobuf:"bytes,4,opt,name=county,proto3" json:"county,omitempty"`
	Town                 string   `protobuf:"bytes,5,opt,name=town,proto3" json:"town,omitempty"`
	Village              string   `protobuf:"bytes,6,opt,name=village,proto3" json:"village,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{14}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetNation() string {
	if m != nil {
		return m.Nation
	}
	return ""
}

func (m *Position) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *Position) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Position) GetCounty() string {
	if m != nil {
		return m.County
	}
	return ""
}

func (m *Position) GetTown() string {
	if m != nil {
		return m.Town
	}
	return ""
}

func (m *Position) GetVillage() string {
	if m != nil {
		return m.Village
	}
	return ""
}

type GetGeoFenceByLonLatReq struct {
	Lon                  string   `protobuf:"bytes,1,opt,name=lon,proto3" json:"lon,omitempty"`
	Lat                  string   `protobuf:"bytes,2,opt,name=lat,proto3" json:"lat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGeoFenceByLonLatReq) Reset()         { *m = GetGeoFenceByLonLatReq{} }
func (m *GetGeoFenceByLonLatReq) String() string { return proto.CompactTextString(m) }
func (*GetGeoFenceByLonLatReq) ProtoMessage()    {}
func (*GetGeoFenceByLonLatReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{15}
}

func (m *GetGeoFenceByLonLatReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGeoFenceByLonLatReq.Unmarshal(m, b)
}
func (m *GetGeoFenceByLonLatReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGeoFenceByLonLatReq.Marshal(b, m, deterministic)
}
func (m *GetGeoFenceByLonLatReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGeoFenceByLonLatReq.Merge(m, src)
}
func (m *GetGeoFenceByLonLatReq) XXX_Size() int {
	return xxx_messageInfo_GetGeoFenceByLonLatReq.Size(m)
}
func (m *GetGeoFenceByLonLatReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGeoFenceByLonLatReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetGeoFenceByLonLatReq proto.InternalMessageInfo

func (m *GetGeoFenceByLonLatReq) GetLon() string {
	if m != nil {
		return m.Lon
	}
	return ""
}

func (m *GetGeoFenceByLonLatReq) GetLat() string {
	if m != nil {
		return m.Lat
	}
	return ""
}

type GetGeoFenceByLonLatResp struct {
	ContinentId          int64    `protobuf:"varint,1,opt,name=continent_id,json=continentId,proto3" json:"continent_id,omitempty"`
	Nation               string   `protobuf:"bytes,2,opt,name=nation,proto3" json:"nation,omitempty"`
	NationCode           string   `protobuf:"bytes,3,opt,name=nation_code,json=nationCode,proto3" json:"nation_code,omitempty"`
	Province             string   `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City                 string   `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	County               string   `protobuf:"bytes,6,opt,name=county,proto3" json:"county,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGeoFenceByLonLatResp) Reset()         { *m = GetGeoFenceByLonLatResp{} }
func (m *GetGeoFenceByLonLatResp) String() string { return proto.CompactTextString(m) }
func (*GetGeoFenceByLonLatResp) ProtoMessage()    {}
func (*GetGeoFenceByLonLatResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{16}
}

func (m *GetGeoFenceByLonLatResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGeoFenceByLonLatResp.Unmarshal(m, b)
}
func (m *GetGeoFenceByLonLatResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGeoFenceByLonLatResp.Marshal(b, m, deterministic)
}
func (m *GetGeoFenceByLonLatResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGeoFenceByLonLatResp.Merge(m, src)
}
func (m *GetGeoFenceByLonLatResp) XXX_Size() int {
	return xxx_messageInfo_GetGeoFenceByLonLatResp.Size(m)
}
func (m *GetGeoFenceByLonLatResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGeoFenceByLonLatResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetGeoFenceByLonLatResp proto.InternalMessageInfo

func (m *GetGeoFenceByLonLatResp) GetContinentId() int64 {
	if m != nil {
		return m.ContinentId
	}
	return 0
}

func (m *GetGeoFenceByLonLatResp) GetNation() string {
	if m != nil {
		return m.Nation
	}
	return ""
}

func (m *GetGeoFenceByLonLatResp) GetNationCode() string {
	if m != nil {
		return m.NationCode
	}
	return ""
}

func (m *GetGeoFenceByLonLatResp) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *GetGeoFenceByLonLatResp) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *GetGeoFenceByLonLatResp) GetCounty() string {
	if m != nil {
		return m.County
	}
	return ""
}

type GeoInChinaReq struct {
	Lon                  string   `protobuf:"bytes,1,opt,name=lon,proto3" json:"lon,omitempty"`
	Lat                  string   `protobuf:"bytes,2,opt,name=lat,proto3" json:"lat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeoInChinaReq) Reset()         { *m = GeoInChinaReq{} }
func (m *GeoInChinaReq) String() string { return proto.CompactTextString(m) }
func (*GeoInChinaReq) ProtoMessage()    {}
func (*GeoInChinaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{17}
}

func (m *GeoInChinaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeoInChinaReq.Unmarshal(m, b)
}
func (m *GeoInChinaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeoInChinaReq.Marshal(b, m, deterministic)
}
func (m *GeoInChinaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeoInChinaReq.Merge(m, src)
}
func (m *GeoInChinaReq) XXX_Size() int {
	return xxx_messageInfo_GeoInChinaReq.Size(m)
}
func (m *GeoInChinaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GeoInChinaReq.DiscardUnknown(m)
}

var xxx_messageInfo_GeoInChinaReq proto.InternalMessageInfo

func (m *GeoInChinaReq) GetLon() string {
	if m != nil {
		return m.Lon
	}
	return ""
}

func (m *GeoInChinaReq) GetLat() string {
	if m != nil {
		return m.Lat
	}
	return ""
}

type GeoInChinaResp struct {
	InChina              bool     `protobuf:"varint,1,opt,name=in_china,json=inChina,proto3" json:"in_china,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeoInChinaResp) Reset()         { *m = GeoInChinaResp{} }
func (m *GeoInChinaResp) String() string { return proto.CompactTextString(m) }
func (*GeoInChinaResp) ProtoMessage()    {}
func (*GeoInChinaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b98929167814b49f, []int{18}
}

func (m *GeoInChinaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeoInChinaResp.Unmarshal(m, b)
}
func (m *GeoInChinaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeoInChinaResp.Marshal(b, m, deterministic)
}
func (m *GeoInChinaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeoInChinaResp.Merge(m, src)
}
func (m *GeoInChinaResp) XXX_Size() int {
	return xxx_messageInfo_GeoInChinaResp.Size(m)
}
func (m *GeoInChinaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GeoInChinaResp.DiscardUnknown(m)
}

var xxx_messageInfo_GeoInChinaResp proto.InternalMessageInfo

func (m *GeoInChinaResp) GetInChina() bool {
	if m != nil {
		return m.InChina
	}
	return false
}

func init() {
	proto.RegisterType((*GetChinaProvinceReq)(nil), "GetChinaProvinceReq")
	proto.RegisterType((*GetChinaProvinceResp)(nil), "GetChinaProvinceResp")
	proto.RegisterType((*Province)(nil), "Province")
	proto.RegisterType((*SearchForeignCountryReq)(nil), "SearchForeignCountryReq")
	proto.RegisterType((*SearchForeignCountryResp)(nil), "SearchForeignCountryResp")
	proto.RegisterType((*Country)(nil), "Country")
	proto.RegisterType((*SearchForeignCountryProvinceReq)(nil), "SearchForeignCountryProvinceReq")
	proto.RegisterType((*SearchForeignCountryProvinceResp)(nil), "SearchForeignCountryProvinceResp")
	proto.RegisterType((*ForeignCountryProvince)(nil), "ForeignCountryProvince")
	proto.RegisterType((*SearchForeignCountryCityReq)(nil), "SearchForeignCountryCityReq")
	proto.RegisterType((*SearchForeignCountryCityResp)(nil), "SearchForeignCountryCityResp")
	proto.RegisterType((*ForeignCountryCity)(nil), "ForeignCountryCity")
	proto.RegisterType((*SearchCityReq)(nil), "SearchCityReq")
	proto.RegisterType((*SearchCityResp)(nil), "SearchCityResp")
	proto.RegisterType((*Position)(nil), "Position")
	proto.RegisterType((*GetGeoFenceByLonLatReq)(nil), "GetGeoFenceByLonLatReq")
	proto.RegisterType((*GetGeoFenceByLonLatResp)(nil), "GetGeoFenceByLonLatResp")
	proto.RegisterType((*GeoInChinaReq)(nil), "GeoInChinaReq")
	proto.RegisterType((*GeoInChinaResp)(nil), "GeoInChinaResp")
}

func init() { proto.RegisterFile("geofence/geofence.proto", fileDescriptor_b98929167814b49f) }

var fileDescriptor_b98929167814b49f = []byte{
	// 735 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdd, 0x4e, 0x1b, 0x3b,
	0x10, 0xd6, 0x26, 0x21, 0x6c, 0x26, 0x10, 0x90, 0x09, 0xc9, 0xb2, 0x70, 0x44, 0x30, 0x3a, 0xe7,
	0x20, 0x1d, 0xe1, 0xa3, 0xc2, 0x45, 0x6f, 0x5a, 0x21, 0x11, 0x95, 0x14, 0x15, 0x55, 0x6d, 0xb8,
	0xa8, 0xc4, 0x4d, 0xb4, 0xdd, 0x38, 0x60, 0x15, 0xec, 0x25, 0xbb, 0x50, 0xe5, 0x01, 0xfa, 0x0e,
	0x7d, 0x99, 0xbe, 0x5b, 0xe5, 0x9f, 0xfd, 0x49, 0xe2, 0x00, 0x52, 0xef, 0x3c, 0xdf, 0xcc, 0xd8,
	0xe3, 0x6f, 0x7e, 0x6c, 0x68, 0x5f, 0x53, 0x31, 0xa2, 0x3c, 0xa4, 0xff, 0xa7, 0x0b, 0x12, 0x8d,
	0x45, 0x22, 0xf0, 0x26, 0x6c, 0xf4, 0x68, 0xd2, 0xbd, 0x61, 0x3c, 0xf8, 0x34, 0x16, 0x8f, 0x8c,
	0x87, 0xb4, 0x4f, 0xef, 0xf1, 0x09, 0x34, 0xe7, 0xe1, 0x38, 0x42, 0xff, 0x42, 0x2d, 0x32, 0x72,
	0xec, 0x39, 0x9d, 0xf2, 0x41, 0xfd, 0xa8, 0x46, 0x32, 0x8b, 0x5c, 0x87, 0xbf, 0x81, 0x9b, 0xc2,
	0x68, 0x1f, 0x56, 0x53, 0xc5, 0x80, 0x07, 0x77, 0xd4, 0x73, 0x3a, 0xce, 0x41, 0xad, 0xbf, 0x92,
	0x82, 0x1f, 0x83, 0x3b, 0x8a, 0x5a, 0x50, 0x0d, 0x86, 0xa1, 0x18, 0x52, 0xaf, 0xa4, 0xb4, 0x46,
	0x42, 0xeb, 0x50, 0xbe, 0x15, 0xdc, 0x2b, 0x2b, 0x50, 0x2e, 0x15, 0x12, 0x24, 0x5e, 0xc5, 0x20,
	0x41, 0x82, 0x07, 0xd0, 0xbe, 0xa4, 0xc1, 0x38, 0xbc, 0x39, 0x13, 0x63, 0xca, 0xae, 0x79, 0x57,
	0x3c, 0xf0, 0x64, 0x3c, 0xe9, 0xd3, 0x7b, 0xb4, 0x07, 0x2b, 0xa1, 0xe0, 0x09, 0xe3, 0x94, 0x27,
	0x03, 0x36, 0x54, 0x47, 0x97, 0xfb, 0xf5, 0x0c, 0x3b, 0x1f, 0x6a, 0x13, 0xe5, 0xa0, 0xa3, 0xd3,
	0xe7, 0xd7, 0x0d, 0x26, 0x83, 0xc3, 0xa7, 0xe0, 0xd9, 0x0f, 0x88, 0x23, 0xf4, 0x0f, 0xd4, 0xb4,
	0x29, 0xcb, 0x28, 0x71, 0x49, 0x6a, 0x90, 0xab, 0x70, 0x17, 0x96, 0x0d, 0x8a, 0x1a, 0x50, 0xca,
	0x42, 0x29, 0xb1, 0x21, 0x42, 0x50, 0x29, 0xdc, 0x5c, 0xad, 0x51, 0x13, 0x96, 0x42, 0x15, 0x8e,
	0xbe, 0xb9, 0x16, 0xf0, 0x15, 0xec, 0xda, 0x02, 0x29, 0xa4, 0x2e, 0xdb, 0xcc, 0x29, 0x6c, 0x36,
	0x97, 0x81, 0xd2, 0x7c, 0x06, 0xf0, 0x03, 0x74, 0x9e, 0xde, 0x3b, 0x8e, 0xd0, 0x67, 0xf0, 0x46,
	0x5a, 0x3b, 0x48, 0x39, 0x4b, 0xf7, 0x30, 0x77, 0x6f, 0x93, 0x05, 0xee, 0xad, 0x91, 0x15, 0xc7,
	0x6f, 0xa1, 0x65, 0xf7, 0x78, 0x51, 0xdd, 0xe0, 0x18, 0xb6, 0x6d, 0x51, 0x77, 0x59, 0x32, 0xf9,
	0x13, 0x36, 0xd0, 0x36, 0xd4, 0x42, 0x96, 0x98, 0x92, 0xd0, 0x39, 0x70, 0x25, 0xa0, 0x0e, 0xa5,
	0xb0, 0xb3, 0xf8, 0xd0, 0x38, 0x42, 0xef, 0xa0, 0x39, 0x4b, 0x93, 0xf4, 0x35, 0x14, 0x6d, 0x10,
	0x8b, 0x1b, 0x1a, 0xcd, 0x61, 0xf8, 0x15, 0xa0, 0x79, 0xcb, 0xe9, 0xc8, 0x9c, 0x99, 0xc8, 0xf6,
	0x61, 0x55, 0x47, 0x56, 0x20, 0xa0, 0x60, 0xa8, 0xd6, 0xf8, 0x35, 0x34, 0x8a, 0x46, 0x71, 0x84,
	0xfe, 0x06, 0x37, 0x12, 0x31, 0x4b, 0x98, 0xe0, 0x79, 0x5b, 0x1b, 0xa0, 0x9f, 0xa9, 0xf0, 0x4f,
	0x07, 0xdc, 0x14, 0x96, 0x1d, 0xcb, 0x03, 0xe3, 0xa1, 0x3a, 0x56, 0x4b, 0xc8, 0x07, 0x37, 0xab,
	0x09, 0xcd, 0x6c, 0x26, 0xab, 0x74, 0x48, 0x22, 0xca, 0x26, 0x1d, 0xf2, 0x3e, 0x2d, 0xa8, 0x2a,
	0x92, 0x26, 0xa6, 0xa5, 0x8d, 0x24, 0x6d, 0x13, 0xf1, 0x9d, 0x7b, 0x4b, 0xda, 0x56, 0xae, 0x91,
	0x07, 0xcb, 0x8f, 0xec, 0xf6, 0x36, 0xb8, 0xa6, 0x5e, 0x55, 0xc1, 0xa9, 0x88, 0xdf, 0x40, 0xab,
	0x47, 0x93, 0x1e, 0x15, 0x67, 0x72, 0xba, 0x9d, 0x4e, 0x2e, 0x04, 0xbf, 0x08, 0x12, 0xc9, 0x80,
	0x99, 0x20, 0xce, 0xdc, 0x04, 0x29, 0xe5, 0x13, 0xe4, 0x97, 0x03, 0x6d, 0xab, 0x7b, 0x1c, 0xbd,
	0x64, 0x84, 0xe4, 0x54, 0x94, 0xa6, 0xa8, 0xd8, 0x85, 0xba, 0x5e, 0x0d, 0x54, 0x11, 0xea, 0x5b,
	0x83, 0x86, 0xba, 0xb2, 0x14, 0x8b, 0x5c, 0x55, 0x16, 0x70, 0xb5, 0x64, 0xe5, 0xaa, 0x5a, 0xe4,
	0x0a, 0x1f, 0xc3, 0x6a, 0x8f, 0x8a, 0x73, 0xae, 0x26, 0xf6, 0x4b, 0x2f, 0xfd, 0x1f, 0x34, 0x8a,
	0x4e, 0x71, 0x84, 0xb6, 0xc0, 0x65, 0x7c, 0x10, 0x4a, 0x59, 0xb9, 0xba, 0xfd, 0x65, 0xa6, 0xd5,
	0x47, 0x3f, 0x2a, 0xb0, 0xd6, 0x33, 0x6f, 0xc7, 0x25, 0x1d, 0x3f, 0xb2, 0x90, 0xa2, 0x0f, 0xd0,
	0xb4, 0xb5, 0x01, 0xf2, 0xc8, 0x82, 0x71, 0xec, 0x6f, 0x91, 0x85, 0x73, 0x34, 0xb4, 0xf7, 0x54,
	0x36, 0x0d, 0x3a, 0xe4, 0x99, 0xc9, 0xe7, 0xef, 0x91, 0x67, 0xe7, 0xd7, 0x17, 0xfb, 0x20, 0x57,
	0x7d, 0xb5, 0x43, 0x9e, 0x18, 0x24, 0xfe, 0x5f, 0xe4, 0xc9, 0x8e, 0x3f, 0x04, 0xc8, 0x5b, 0x0a,
	0x35, 0xc8, 0x54, 0x13, 0xfa, 0x6b, 0x64, 0xa6, 0xdf, 0xde, 0xab, 0x67, 0x77, 0xb6, 0xdc, 0x50,
	0x9b, 0xd8, 0x6b, 0xd8, 0xf7, 0xc8, 0xa2, 0xea, 0x3c, 0x04, 0xc8, 0x93, 0x88, 0x1a, 0x64, 0xaa,
	0x0c, 0xfc, 0x35, 0x32, 0x93, 0xe1, 0x13, 0x58, 0x9f, 0x7d, 0xd8, 0x51, 0x93, 0x58, 0xbe, 0x00,
	0xfe, 0x26, 0xb1, 0xfd, 0x00, 0x4e, 0x57, 0xae, 0x80, 0x64, 0x9f, 0x88, 0xaf, 0x55, 0xf5, 0x8b,
	0x38, 0xfe, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x61, 0xb5, 0x2f, 0xba, 0x60, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GeofenceServiceClient is the client API for GeofenceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GeofenceServiceClient interface {
	// 搜索海外国家
	SearchForeignCountry(ctx context.Context, in *SearchForeignCountryReq, opts ...grpc.CallOption) (*SearchForeignCountryResp, error)
	// 搜索海外国家的省份
	SearchForeignCountryProvince(ctx context.Context, in *SearchForeignCountryProvinceReq, opts ...grpc.CallOption) (*SearchForeignCountryProvinceResp, error)
	// 搜搜海外国家的城市
	SearchForeignCountryCity(ctx context.Context, in *SearchForeignCountryCityReq, opts ...grpc.CallOption) (*SearchForeignCountryCityResp, error)
	// 搜索中国城市
	SearchCity(ctx context.Context, in *SearchCityReq, opts ...grpc.CallOption) (*SearchCityResp, error)
	// 根据经纬度获取地理围栏
	GetGeoFenceByLonLat(ctx context.Context, in *GetGeoFenceByLonLatReq, opts ...grpc.CallOption) (*GetGeoFenceByLonLatResp, error)
	// 根据经纬度判断是否在中国
	GeoInChina(ctx context.Context, in *GeoInChinaReq, opts ...grpc.CallOption) (*GeoInChinaResp, error)
	// 查询中国的省份中心点
	GetChinaProvince(ctx context.Context, in *GetChinaProvinceReq, opts ...grpc.CallOption) (*GetChinaProvinceResp, error)
}

type geofenceServiceClient struct {
	cc *grpc.ClientConn
}

func NewGeofenceServiceClient(cc *grpc.ClientConn) GeofenceServiceClient {
	return &geofenceServiceClient{cc}
}

func (c *geofenceServiceClient) SearchForeignCountry(ctx context.Context, in *SearchForeignCountryReq, opts ...grpc.CallOption) (*SearchForeignCountryResp, error) {
	out := new(SearchForeignCountryResp)
	err := c.cc.Invoke(ctx, "/GeofenceService/SearchForeignCountry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geofenceServiceClient) SearchForeignCountryProvince(ctx context.Context, in *SearchForeignCountryProvinceReq, opts ...grpc.CallOption) (*SearchForeignCountryProvinceResp, error) {
	out := new(SearchForeignCountryProvinceResp)
	err := c.cc.Invoke(ctx, "/GeofenceService/SearchForeignCountryProvince", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geofenceServiceClient) SearchForeignCountryCity(ctx context.Context, in *SearchForeignCountryCityReq, opts ...grpc.CallOption) (*SearchForeignCountryCityResp, error) {
	out := new(SearchForeignCountryCityResp)
	err := c.cc.Invoke(ctx, "/GeofenceService/SearchForeignCountryCity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geofenceServiceClient) SearchCity(ctx context.Context, in *SearchCityReq, opts ...grpc.CallOption) (*SearchCityResp, error) {
	out := new(SearchCityResp)
	err := c.cc.Invoke(ctx, "/GeofenceService/SearchCity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geofenceServiceClient) GetGeoFenceByLonLat(ctx context.Context, in *GetGeoFenceByLonLatReq, opts ...grpc.CallOption) (*GetGeoFenceByLonLatResp, error) {
	out := new(GetGeoFenceByLonLatResp)
	err := c.cc.Invoke(ctx, "/GeofenceService/GetGeoFenceByLonLat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geofenceServiceClient) GeoInChina(ctx context.Context, in *GeoInChinaReq, opts ...grpc.CallOption) (*GeoInChinaResp, error) {
	out := new(GeoInChinaResp)
	err := c.cc.Invoke(ctx, "/GeofenceService/GeoInChina", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geofenceServiceClient) GetChinaProvince(ctx context.Context, in *GetChinaProvinceReq, opts ...grpc.CallOption) (*GetChinaProvinceResp, error) {
	out := new(GetChinaProvinceResp)
	err := c.cc.Invoke(ctx, "/GeofenceService/GetChinaProvince", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GeofenceServiceServer is the server API for GeofenceService service.
type GeofenceServiceServer interface {
	// 搜索海外国家
	SearchForeignCountry(context.Context, *SearchForeignCountryReq) (*SearchForeignCountryResp, error)
	// 搜索海外国家的省份
	SearchForeignCountryProvince(context.Context, *SearchForeignCountryProvinceReq) (*SearchForeignCountryProvinceResp, error)
	// 搜搜海外国家的城市
	SearchForeignCountryCity(context.Context, *SearchForeignCountryCityReq) (*SearchForeignCountryCityResp, error)
	// 搜索中国城市
	SearchCity(context.Context, *SearchCityReq) (*SearchCityResp, error)
	// 根据经纬度获取地理围栏
	GetGeoFenceByLonLat(context.Context, *GetGeoFenceByLonLatReq) (*GetGeoFenceByLonLatResp, error)
	// 根据经纬度判断是否在中国
	GeoInChina(context.Context, *GeoInChinaReq) (*GeoInChinaResp, error)
	// 查询中国的省份中心点
	GetChinaProvince(context.Context, *GetChinaProvinceReq) (*GetChinaProvinceResp, error)
}

// UnimplementedGeofenceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGeofenceServiceServer struct {
}

func (*UnimplementedGeofenceServiceServer) SearchForeignCountry(ctx context.Context, req *SearchForeignCountryReq) (*SearchForeignCountryResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForeignCountry not implemented")
}
func (*UnimplementedGeofenceServiceServer) SearchForeignCountryProvince(ctx context.Context, req *SearchForeignCountryProvinceReq) (*SearchForeignCountryProvinceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForeignCountryProvince not implemented")
}
func (*UnimplementedGeofenceServiceServer) SearchForeignCountryCity(ctx context.Context, req *SearchForeignCountryCityReq) (*SearchForeignCountryCityResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchForeignCountryCity not implemented")
}
func (*UnimplementedGeofenceServiceServer) SearchCity(ctx context.Context, req *SearchCityReq) (*SearchCityResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchCity not implemented")
}
func (*UnimplementedGeofenceServiceServer) GetGeoFenceByLonLat(ctx context.Context, req *GetGeoFenceByLonLatReq) (*GetGeoFenceByLonLatResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGeoFenceByLonLat not implemented")
}
func (*UnimplementedGeofenceServiceServer) GeoInChina(ctx context.Context, req *GeoInChinaReq) (*GeoInChinaResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GeoInChina not implemented")
}
func (*UnimplementedGeofenceServiceServer) GetChinaProvince(ctx context.Context, req *GetChinaProvinceReq) (*GetChinaProvinceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChinaProvince not implemented")
}

func RegisterGeofenceServiceServer(s *grpc.Server, srv GeofenceServiceServer) {
	s.RegisterService(&_GeofenceService_serviceDesc, srv)
}

func _GeofenceService_SearchForeignCountry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchForeignCountryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeofenceServiceServer).SearchForeignCountry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GeofenceService/SearchForeignCountry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeofenceServiceServer).SearchForeignCountry(ctx, req.(*SearchForeignCountryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeofenceService_SearchForeignCountryProvince_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchForeignCountryProvinceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeofenceServiceServer).SearchForeignCountryProvince(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GeofenceService/SearchForeignCountryProvince",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeofenceServiceServer).SearchForeignCountryProvince(ctx, req.(*SearchForeignCountryProvinceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeofenceService_SearchForeignCountryCity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchForeignCountryCityReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeofenceServiceServer).SearchForeignCountryCity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GeofenceService/SearchForeignCountryCity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeofenceServiceServer).SearchForeignCountryCity(ctx, req.(*SearchForeignCountryCityReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeofenceService_SearchCity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchCityReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeofenceServiceServer).SearchCity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GeofenceService/SearchCity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeofenceServiceServer).SearchCity(ctx, req.(*SearchCityReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeofenceService_GetGeoFenceByLonLat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGeoFenceByLonLatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeofenceServiceServer).GetGeoFenceByLonLat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GeofenceService/GetGeoFenceByLonLat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeofenceServiceServer).GetGeoFenceByLonLat(ctx, req.(*GetGeoFenceByLonLatReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeofenceService_GeoInChina_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeoInChinaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeofenceServiceServer).GeoInChina(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GeofenceService/GeoInChina",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeofenceServiceServer).GeoInChina(ctx, req.(*GeoInChinaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GeofenceService_GetChinaProvince_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChinaProvinceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeofenceServiceServer).GetChinaProvince(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GeofenceService/GetChinaProvince",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeofenceServiceServer).GetChinaProvince(ctx, req.(*GetChinaProvinceReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GeofenceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GeofenceService",
	HandlerType: (*GeofenceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchForeignCountry",
			Handler:    _GeofenceService_SearchForeignCountry_Handler,
		},
		{
			MethodName: "SearchForeignCountryProvince",
			Handler:    _GeofenceService_SearchForeignCountryProvince_Handler,
		},
		{
			MethodName: "SearchForeignCountryCity",
			Handler:    _GeofenceService_SearchForeignCountryCity_Handler,
		},
		{
			MethodName: "SearchCity",
			Handler:    _GeofenceService_SearchCity_Handler,
		},
		{
			MethodName: "GetGeoFenceByLonLat",
			Handler:    _GeofenceService_GetGeoFenceByLonLat_Handler,
		},
		{
			MethodName: "GeoInChina",
			Handler:    _GeofenceService_GeoInChina_Handler,
		},
		{
			MethodName: "GetChinaProvince",
			Handler:    _GeofenceService_GetChinaProvince_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "geofence/geofence.proto",
}
