// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data_platform/data_platform.proto

package data_platform

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetDayDataReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDayDataReq) Reset()         { *m = GetDayDataReq{} }
func (m *GetDayDataReq) String() string { return proto.CompactTextString(m) }
func (*GetDayDataReq) ProtoMessage()    {}
func (*GetDayDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e470df4a9f9a5979, []int{0}
}

func (m *GetDayDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDayDataReq.Unmarshal(m, b)
}
func (m *GetDayDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDayDataReq.Marshal(b, m, deterministic)
}
func (m *GetDayDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDayDataReq.Merge(m, src)
}
func (m *GetDayDataReq) XXX_Size() int {
	return xxx_messageInfo_GetDayDataReq.Size(m)
}
func (m *GetDayDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDayDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetDayDataReq proto.InternalMessageInfo

type GetDayDataResp struct {
	NewUserAvg           int64    `protobuf:"varint,1,opt,name=NewUserAvg,proto3" json:"NewUserAvg,omitempty"`
	NewUserGrew          float32  `protobuf:"fixed32,2,opt,name=NewUserGrew,proto3" json:"NewUserGrew,omitempty"`
	ActiveUserAvg        int64    `protobuf:"varint,3,opt,name=ActiveUserAvg,proto3" json:"ActiveUserAvg,omitempty"`
	ActiveUserGrew       float32  `protobuf:"fixed32,4,opt,name=ActiveUserGrew,proto3" json:"ActiveUserGrew,omitempty"`
	RetentionRateAvg     float32  `protobuf:"fixed32,5,opt,name=RetentionRateAvg,proto3" json:"RetentionRateAvg,omitempty"`
	RetentionRateGrew    float32  `protobuf:"fixed32,6,opt,name=RetentionRateGrew,proto3" json:"RetentionRateGrew,omitempty"`
	Duration             int64    `protobuf:"varint,7,opt,name=Duration,proto3" json:"Duration,omitempty"`
	DurationGrew         float32  `protobuf:"fixed32,8,opt,name=DurationGrew,proto3" json:"DurationGrew,omitempty"`
	LiveOnlineUserAvg    int64    `protobuf:"varint,9,opt,name=LiveOnlineUserAvg,proto3" json:"LiveOnlineUserAvg,omitempty"`
	LiveOnlineUserGrew   float32  `protobuf:"fixed32,10,opt,name=LiveOnlineUserGrew,proto3" json:"LiveOnlineUserGrew,omitempty"`
	LiveWatchUserAvg     int64    `protobuf:"varint,11,opt,name=LiveWatchUserAvg,proto3" json:"LiveWatchUserAvg,omitempty"`
	LiveWatchUserGrew    float32  `protobuf:"fixed32,12,opt,name=LiveWatchUserGrew,proto3" json:"LiveWatchUserGrew,omitempty"`
	FrequencyAvg         float32  `protobuf:"fixed32,13,opt,name=FrequencyAvg,proto3" json:"FrequencyAvg,omitempty"`
	FrequencyGrew        float32  `protobuf:"fixed32,14,opt,name=FrequencyGrew,proto3" json:"FrequencyGrew,omitempty"`
	LaunchAvg            float32  `protobuf:"fixed32,15,opt,name=LaunchAvg,proto3" json:"LaunchAvg,omitempty"`
	LaunchGrew           float32  `protobuf:"fixed32,16,opt,name=LaunchGrew,proto3" json:"LaunchGrew,omitempty"`
	TotalActiveUser      int64    `protobuf:"varint,17,opt,name=TotalActiveUser,proto3" json:"TotalActiveUser,omitempty"`
	TotalActiveUserGrew  float32  `protobuf:"fixed32,18,opt,name=TotalActiveUserGrew,proto3" json:"TotalActiveUserGrew,omitempty"`
	TotalUser            int64    `protobuf:"varint,19,opt,name=TotalUser,proto3" json:"TotalUser,omitempty"`
	TotalLiveUser        int64    `protobuf:"varint,20,opt,name=TotalLiveUser,proto3" json:"TotalLiveUser,omitempty"`
	TotalWatchUser       int64    `protobuf:"varint,21,opt,name=TotalWatchUser,proto3" json:"TotalWatchUser,omitempty"`
	AppType              int32    `protobuf:"varint,22,opt,name=AppType,proto3" json:"AppType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDayDataResp) Reset()         { *m = GetDayDataResp{} }
func (m *GetDayDataResp) String() string { return proto.CompactTextString(m) }
func (*GetDayDataResp) ProtoMessage()    {}
func (*GetDayDataResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_e470df4a9f9a5979, []int{1}
}

func (m *GetDayDataResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDayDataResp.Unmarshal(m, b)
}
func (m *GetDayDataResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDayDataResp.Marshal(b, m, deterministic)
}
func (m *GetDayDataResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDayDataResp.Merge(m, src)
}
func (m *GetDayDataResp) XXX_Size() int {
	return xxx_messageInfo_GetDayDataResp.Size(m)
}
func (m *GetDayDataResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDayDataResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetDayDataResp proto.InternalMessageInfo

func (m *GetDayDataResp) GetNewUserAvg() int64 {
	if m != nil {
		return m.NewUserAvg
	}
	return 0
}

func (m *GetDayDataResp) GetNewUserGrew() float32 {
	if m != nil {
		return m.NewUserGrew
	}
	return 0
}

func (m *GetDayDataResp) GetActiveUserAvg() int64 {
	if m != nil {
		return m.ActiveUserAvg
	}
	return 0
}

func (m *GetDayDataResp) GetActiveUserGrew() float32 {
	if m != nil {
		return m.ActiveUserGrew
	}
	return 0
}

func (m *GetDayDataResp) GetRetentionRateAvg() float32 {
	if m != nil {
		return m.RetentionRateAvg
	}
	return 0
}

func (m *GetDayDataResp) GetRetentionRateGrew() float32 {
	if m != nil {
		return m.RetentionRateGrew
	}
	return 0
}

func (m *GetDayDataResp) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *GetDayDataResp) GetDurationGrew() float32 {
	if m != nil {
		return m.DurationGrew
	}
	return 0
}

func (m *GetDayDataResp) GetLiveOnlineUserAvg() int64 {
	if m != nil {
		return m.LiveOnlineUserAvg
	}
	return 0
}

func (m *GetDayDataResp) GetLiveOnlineUserGrew() float32 {
	if m != nil {
		return m.LiveOnlineUserGrew
	}
	return 0
}

func (m *GetDayDataResp) GetLiveWatchUserAvg() int64 {
	if m != nil {
		return m.LiveWatchUserAvg
	}
	return 0
}

func (m *GetDayDataResp) GetLiveWatchUserGrew() float32 {
	if m != nil {
		return m.LiveWatchUserGrew
	}
	return 0
}

func (m *GetDayDataResp) GetFrequencyAvg() float32 {
	if m != nil {
		return m.FrequencyAvg
	}
	return 0
}

func (m *GetDayDataResp) GetFrequencyGrew() float32 {
	if m != nil {
		return m.FrequencyGrew
	}
	return 0
}

func (m *GetDayDataResp) GetLaunchAvg() float32 {
	if m != nil {
		return m.LaunchAvg
	}
	return 0
}

func (m *GetDayDataResp) GetLaunchGrew() float32 {
	if m != nil {
		return m.LaunchGrew
	}
	return 0
}

func (m *GetDayDataResp) GetTotalActiveUser() int64 {
	if m != nil {
		return m.TotalActiveUser
	}
	return 0
}

func (m *GetDayDataResp) GetTotalActiveUserGrew() float32 {
	if m != nil {
		return m.TotalActiveUserGrew
	}
	return 0
}

func (m *GetDayDataResp) GetTotalUser() int64 {
	if m != nil {
		return m.TotalUser
	}
	return 0
}

func (m *GetDayDataResp) GetTotalLiveUser() int64 {
	if m != nil {
		return m.TotalLiveUser
	}
	return 0
}

func (m *GetDayDataResp) GetTotalWatchUser() int64 {
	if m != nil {
		return m.TotalWatchUser
	}
	return 0
}

func (m *GetDayDataResp) GetAppType() int32 {
	if m != nil {
		return m.AppType
	}
	return 0
}

func init() {
	proto.RegisterType((*GetDayDataReq)(nil), "GetDayDataReq")
	proto.RegisterType((*GetDayDataResp)(nil), "GetDayDataResp")
}

func init() { proto.RegisterFile("data_platform/data_platform.proto", fileDescriptor_e470df4a9f9a5979) }

var fileDescriptor_e470df4a9f9a5979 = []byte{
	// 427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xdd, 0xae, 0xd2, 0x40,
	0x10, 0xc7, 0x53, 0x90, 0xaf, 0x01, 0x5a, 0x18, 0xd4, 0x34, 0xc4, 0x98, 0x4a, 0x8c, 0x69, 0x8c,
	0x29, 0x44, 0x9f, 0x00, 0x43, 0xe0, 0x86, 0xa8, 0xa9, 0x18, 0x13, 0x6f, 0xcc, 0x5a, 0x57, 0x69,
	0xc2, 0x69, 0x4b, 0x59, 0x4a, 0x78, 0xd7, 0xf3, 0x30, 0x27, 0x3b, 0xa5, 0x1f, 0xdb, 0x72, 0xc7,
	0xfc, 0x66, 0xf2, 0xeb, 0x0e, 0xbb, 0x7f, 0x78, 0xf3, 0x97, 0x09, 0xf6, 0x3b, 0x3a, 0x30, 0xf1,
	0x2f, 0x8c, 0x1f, 0xe6, 0x4a, 0xe5, 0x44, 0x71, 0x28, 0xc2, 0x99, 0x01, 0xc3, 0x0d, 0x17, 0x2b,
	0x76, 0x5d, 0x31, 0xc1, 0x5c, 0x7e, 0x9c, 0x3d, 0xb6, 0x41, 0x2f, 0x93, 0x53, 0x84, 0xaf, 0x01,
	0xbe, 0xf0, 0xcb, 0x8f, 0x13, 0x8f, 0x97, 0xc9, 0x7f, 0x53, 0xb3, 0x34, 0xbb, 0xe9, 0x96, 0x08,
	0x5a, 0xd0, 0xbf, 0x55, 0x9b, 0x98, 0x5f, 0xcc, 0x86, 0xa5, 0xd9, 0x0d, 0xb7, 0x8c, 0xf0, 0x2d,
	0x0c, 0x97, 0x9e, 0xf0, 0x13, 0x9e, 0x49, 0x9a, 0x24, 0x51, 0x21, 0xbe, 0x03, 0xbd, 0x00, 0xa4,
	0x7a, 0x46, 0xaa, 0x0a, 0xc5, 0xf7, 0x30, 0x72, 0xb9, 0xe0, 0x81, 0xf0, 0xc3, 0xc0, 0x65, 0x82,
	0x4b, 0x61, 0x8b, 0x26, 0x6b, 0x1c, 0x3f, 0xc0, 0x58, 0x61, 0xa4, 0x6d, 0xd3, 0x70, 0xbd, 0x81,
	0x53, 0xe8, 0xae, 0xce, 0x31, 0x93, 0xcc, 0xec, 0xd0, 0x11, 0xf3, 0x1a, 0x67, 0x30, 0xc8, 0x7e,
	0x93, 0xa4, 0x4b, 0x12, 0x85, 0xc9, 0xaf, 0x6d, 0xfd, 0x84, 0x7f, 0x0d, 0x0e, 0x7e, 0x90, 0xef,
	0xda, 0x23, 0x51, 0xbd, 0x81, 0x0e, 0xa0, 0x0a, 0xc9, 0x0b, 0xe4, 0xbd, 0xd3, 0x91, 0x7b, 0x4b,
	0xfa, 0x93, 0x09, 0x6f, 0x9f, 0xc9, 0xfb, 0x24, 0xaf, 0xf1, 0xec, 0x24, 0x39, 0x23, 0xf5, 0x20,
	0xdd, 0xbb, 0xd6, 0x90, 0xbb, 0xad, 0x63, 0x7e, 0x3c, 0xf3, 0xc0, 0xbb, 0x4a, 0xeb, 0x30, 0xdd,
	0xad, 0xcc, 0xe4, 0x1d, 0xe6, 0x35, 0xd9, 0x74, 0x1a, 0x52, 0x21, 0xbe, 0x82, 0xde, 0x96, 0x9d,
	0x03, 0x6f, 0x2f, 0x35, 0x06, 0x4d, 0x14, 0x40, 0xbe, 0xa4, 0xb4, 0x20, 0xc1, 0x88, 0xda, 0x25,
	0x82, 0x36, 0x18, 0xbb, 0x50, 0xb0, 0x43, 0x71, 0xe1, 0xe6, 0x98, 0x16, 0xac, 0x62, 0x5c, 0xc0,
	0xa4, 0x82, 0x48, 0x89, 0xa4, 0xbc, 0xd7, 0x92, 0x27, 0x23, 0x4c, 0xd6, 0x09, 0x59, 0x0b, 0x20,
	0xb7, 0xa3, 0x62, 0x9b, 0x7d, 0xf7, 0x79, 0xfa, 0x42, 0x15, 0x28, 0x5f, 0x28, 0x81, 0xfc, 0xdf,
	0x33, 0x5f, 0xd0, 0x58, 0x85, 0xa2, 0x09, 0x9d, 0x65, 0x14, 0xed, 0xae, 0x11, 0x37, 0x5f, 0x5a,
	0x9a, 0xdd, 0x72, 0xb3, 0xf2, 0xe3, 0x1a, 0x26, 0x32, 0x57, 0xdf, 0x6e, 0x29, 0xfc, 0xce, 0xe3,
	0xc4, 0xf7, 0x38, 0xce, 0x01, 0x8a, 0xd0, 0xa1, 0xee, 0x28, 0x99, 0x9c, 0x1a, 0x8e, 0x9a, 0xc8,
	0x85, 0xf6, 0x79, 0xfc, 0xcb, 0x70, 0xd4, 0x40, 0xff, 0x69, 0x53, 0xa2, 0x3f, 0x3d, 0x05, 0x00,
	0x00, 0xff, 0xff, 0x6a, 0xce, 0x4a, 0x4b, 0xf6, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataPlatformServiceClient is the client API for DataPlatformService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataPlatformServiceClient interface {
	GetDayData(ctx context.Context, in *GetDayDataReq, opts ...grpc.CallOption) (DataPlatformService_GetDayDataClient, error)
}

type dataPlatformServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataPlatformServiceClient(cc *grpc.ClientConn) DataPlatformServiceClient {
	return &dataPlatformServiceClient{cc}
}

func (c *dataPlatformServiceClient) GetDayData(ctx context.Context, in *GetDayDataReq, opts ...grpc.CallOption) (DataPlatformService_GetDayDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataPlatformService_serviceDesc.Streams[0], "/DataPlatformService/GetDayData", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataPlatformServiceGetDayDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DataPlatformService_GetDayDataClient interface {
	Recv() (*GetDayDataResp, error)
	grpc.ClientStream
}

type dataPlatformServiceGetDayDataClient struct {
	grpc.ClientStream
}

func (x *dataPlatformServiceGetDayDataClient) Recv() (*GetDayDataResp, error) {
	m := new(GetDayDataResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DataPlatformServiceServer is the server API for DataPlatformService service.
type DataPlatformServiceServer interface {
	GetDayData(*GetDayDataReq, DataPlatformService_GetDayDataServer) error
}

// UnimplementedDataPlatformServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataPlatformServiceServer struct {
}

func (*UnimplementedDataPlatformServiceServer) GetDayData(req *GetDayDataReq, srv DataPlatformService_GetDayDataServer) error {
	return status.Errorf(codes.Unimplemented, "method GetDayData not implemented")
}

func RegisterDataPlatformServiceServer(s *grpc.Server, srv DataPlatformServiceServer) {
	s.RegisterService(&_DataPlatformService_serviceDesc, srv)
}

func _DataPlatformService_GetDayData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetDayDataReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DataPlatformServiceServer).GetDayData(m, &dataPlatformServiceGetDayDataServer{stream})
}

type DataPlatformService_GetDayDataServer interface {
	Send(*GetDayDataResp) error
	grpc.ServerStream
}

type dataPlatformServiceGetDayDataServer struct {
	grpc.ServerStream
}

func (x *dataPlatformServiceGetDayDataServer) Send(m *GetDayDataResp) error {
	return x.ServerStream.SendMsg(m)
}

var _DataPlatformService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DataPlatformService",
	HandlerType: (*DataPlatformServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetDayData",
			Handler:       _DataPlatformService_GetDayData_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "data_platform/data_platform.proto",
}
