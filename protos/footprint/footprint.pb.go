// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: footprint/footprint.proto

package footprint

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FootprintIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FootprintIDReq) Reset() {
	*x = FootprintIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_footprint_footprint_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootprintIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootprintIDReq) ProtoMessage() {}

func (x *FootprintIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_footprint_footprint_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootprintIDReq.ProtoReflect.Descriptor instead.
func (*FootprintIDReq) Descriptor() ([]byte, []int) {
	return file_footprint_footprint_proto_rawDescGZIP(), []int{0}
}

func (x *FootprintIDReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FootprintTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FootprintId int64  `protobuf:"varint,1,opt,name=footprint_id,json=footprintId,proto3" json:"footprint_id,omitempty"`
	TopicId     int64  `protobuf:"varint,2,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	TopicName   string `protobuf:"bytes,3,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
}

func (x *FootprintTopic) Reset() {
	*x = FootprintTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_footprint_footprint_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootprintTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootprintTopic) ProtoMessage() {}

func (x *FootprintTopic) ProtoReflect() protoreflect.Message {
	mi := &file_footprint_footprint_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootprintTopic.ProtoReflect.Descriptor instead.
func (*FootprintTopic) Descriptor() ([]byte, []int) {
	return file_footprint_footprint_proto_rawDescGZIP(), []int{1}
}

func (x *FootprintTopic) GetFootprintId() int64 {
	if x != nil {
		return x.FootprintId
	}
	return 0
}

func (x *FootprintTopic) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *FootprintTopic) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

// 足迹
type CheckUserIsLikeFootprintReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FootprintId int64  `protobuf:"varint,1,opt,name=footprint_id,json=footprintId,proto3" json:"footprint_id,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CheckUserIsLikeFootprintReq) Reset() {
	*x = CheckUserIsLikeFootprintReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_footprint_footprint_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserIsLikeFootprintReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserIsLikeFootprintReq) ProtoMessage() {}

func (x *CheckUserIsLikeFootprintReq) ProtoReflect() protoreflect.Message {
	mi := &file_footprint_footprint_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserIsLikeFootprintReq.ProtoReflect.Descriptor instead.
func (*CheckUserIsLikeFootprintReq) Descriptor() ([]byte, []int) {
	return file_footprint_footprint_proto_rawDescGZIP(), []int{2}
}

func (x *CheckUserIsLikeFootprintReq) GetFootprintId() int64 {
	if x != nil {
		return x.FootprintId
	}
	return 0
}

func (x *CheckUserIsLikeFootprintReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CheckUserIsLikeFootprintResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLike bool `protobuf:"varint,1,opt,name=is_like,json=isLike,proto3" json:"is_like,omitempty"`
}

func (x *CheckUserIsLikeFootprintResp) Reset() {
	*x = CheckUserIsLikeFootprintResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_footprint_footprint_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserIsLikeFootprintResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserIsLikeFootprintResp) ProtoMessage() {}

func (x *CheckUserIsLikeFootprintResp) ProtoReflect() protoreflect.Message {
	mi := &file_footprint_footprint_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserIsLikeFootprintResp.ProtoReflect.Descriptor instead.
func (*CheckUserIsLikeFootprintResp) Descriptor() ([]byte, []int) {
	return file_footprint_footprint_proto_rawDescGZIP(), []int{3}
}

func (x *CheckUserIsLikeFootprintResp) GetIsLike() bool {
	if x != nil {
		return x.IsLike
	}
	return false
}

type GetFootprintLikeNumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LikeNum int64 `protobuf:"varint,1,opt,name=like_num,json=likeNum,proto3" json:"like_num,omitempty"`
}

func (x *GetFootprintLikeNumResp) Reset() {
	*x = GetFootprintLikeNumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_footprint_footprint_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFootprintLikeNumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFootprintLikeNumResp) ProtoMessage() {}

func (x *GetFootprintLikeNumResp) ProtoReflect() protoreflect.Message {
	mi := &file_footprint_footprint_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFootprintLikeNumResp.ProtoReflect.Descriptor instead.
func (*GetFootprintLikeNumResp) Descriptor() ([]byte, []int) {
	return file_footprint_footprint_proto_rawDescGZIP(), []int{4}
}

func (x *GetFootprintLikeNumResp) GetLikeNum() int64 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

type GetTopicsByFootprintIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics []*FootprintTopic `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (x *GetTopicsByFootprintIDResp) Reset() {
	*x = GetTopicsByFootprintIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_footprint_footprint_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicsByFootprintIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicsByFootprintIDResp) ProtoMessage() {}

func (x *GetTopicsByFootprintIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_footprint_footprint_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicsByFootprintIDResp.ProtoReflect.Descriptor instead.
func (*GetTopicsByFootprintIDResp) Descriptor() ([]byte, []int) {
	return file_footprint_footprint_proto_rawDescGZIP(), []int{5}
}

func (x *GetTopicsByFootprintIDResp) GetTopics() []*FootprintTopic {
	if x != nil {
		return x.Topics
	}
	return nil
}

var File_footprint_footprint_proto protoreflect.FileDescriptor

var file_footprint_footprint_proto_rawDesc = []byte{
	0x0a, 0x19, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2f, 0x66, 0x6f, 0x6f, 0x74,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x20, 0x0a, 0x0e, 0x46,
	0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6d, 0x0a,
	0x0e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x1b,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x46,
	0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x66,
	0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69,
	0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65,
	0x22, 0x34, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x69, 0x6b, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c,
	0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x45, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x42, 0x79, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x32, 0xf5, 0x01,
	0x0a, 0x10, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x57, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x73, 0x4c, 0x69, 0x6b, 0x65, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x1c,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65,
	0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x46, 0x6f,
	0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x0f, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x42, 0x79, 0x46, 0x6f, 0x6f, 0x74,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x0f, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x42, 0x79, 0x46, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x66, 0x6f, 0x6f, 0x74, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_footprint_footprint_proto_rawDescOnce sync.Once
	file_footprint_footprint_proto_rawDescData = file_footprint_footprint_proto_rawDesc
)

func file_footprint_footprint_proto_rawDescGZIP() []byte {
	file_footprint_footprint_proto_rawDescOnce.Do(func() {
		file_footprint_footprint_proto_rawDescData = protoimpl.X.CompressGZIP(file_footprint_footprint_proto_rawDescData)
	})
	return file_footprint_footprint_proto_rawDescData
}

var file_footprint_footprint_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_footprint_footprint_proto_goTypes = []interface{}{
	(*FootprintIDReq)(nil),               // 0: FootprintIDReq
	(*FootprintTopic)(nil),               // 1: FootprintTopic
	(*CheckUserIsLikeFootprintReq)(nil),  // 2: CheckUserIsLikeFootprintReq
	(*CheckUserIsLikeFootprintResp)(nil), // 3: CheckUserIsLikeFootprintResp
	(*GetFootprintLikeNumResp)(nil),      // 4: GetFootprintLikeNumResp
	(*GetTopicsByFootprintIDResp)(nil),   // 5: GetTopicsByFootprintIDResp
}
var file_footprint_footprint_proto_depIdxs = []int32{
	1, // 0: GetTopicsByFootprintIDResp.topics:type_name -> FootprintTopic
	2, // 1: FootprintService.CheckUserIsLikeFootprint:input_type -> CheckUserIsLikeFootprintReq
	0, // 2: FootprintService.GetFootprintLikeNum:input_type -> FootprintIDReq
	0, // 3: FootprintService.GetTopicsByFootprintID:input_type -> FootprintIDReq
	3, // 4: FootprintService.CheckUserIsLikeFootprint:output_type -> CheckUserIsLikeFootprintResp
	4, // 5: FootprintService.GetFootprintLikeNum:output_type -> GetFootprintLikeNumResp
	5, // 6: FootprintService.GetTopicsByFootprintID:output_type -> GetTopicsByFootprintIDResp
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_footprint_footprint_proto_init() }
func file_footprint_footprint_proto_init() {
	if File_footprint_footprint_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_footprint_footprint_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootprintIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_footprint_footprint_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootprintTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_footprint_footprint_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserIsLikeFootprintReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_footprint_footprint_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserIsLikeFootprintResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_footprint_footprint_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFootprintLikeNumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_footprint_footprint_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicsByFootprintIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_footprint_footprint_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_footprint_footprint_proto_goTypes,
		DependencyIndexes: file_footprint_footprint_proto_depIdxs,
		MessageInfos:      file_footprint_footprint_proto_msgTypes,
	}.Build()
	File_footprint_footprint_proto = out.File
	file_footprint_footprint_proto_rawDesc = nil
	file_footprint_footprint_proto_goTypes = nil
	file_footprint_footprint_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FootprintServiceClient is the client API for FootprintService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FootprintServiceClient interface {
	// 检查用户点赞了足迹
	CheckUserIsLikeFootprint(ctx context.Context, in *CheckUserIsLikeFootprintReq, opts ...grpc.CallOption) (*CheckUserIsLikeFootprintResp, error)
	// 获取足迹点赞数
	GetFootprintLikeNum(ctx context.Context, in *FootprintIDReq, opts ...grpc.CallOption) (*GetFootprintLikeNumResp, error)
	// 根据足迹id获取话题列表
	GetTopicsByFootprintID(ctx context.Context, in *FootprintIDReq, opts ...grpc.CallOption) (*GetTopicsByFootprintIDResp, error)
}

type footprintServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFootprintServiceClient(cc grpc.ClientConnInterface) FootprintServiceClient {
	return &footprintServiceClient{cc}
}

func (c *footprintServiceClient) CheckUserIsLikeFootprint(ctx context.Context, in *CheckUserIsLikeFootprintReq, opts ...grpc.CallOption) (*CheckUserIsLikeFootprintResp, error) {
	out := new(CheckUserIsLikeFootprintResp)
	err := c.cc.Invoke(ctx, "/FootprintService/CheckUserIsLikeFootprint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *footprintServiceClient) GetFootprintLikeNum(ctx context.Context, in *FootprintIDReq, opts ...grpc.CallOption) (*GetFootprintLikeNumResp, error) {
	out := new(GetFootprintLikeNumResp)
	err := c.cc.Invoke(ctx, "/FootprintService/GetFootprintLikeNum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *footprintServiceClient) GetTopicsByFootprintID(ctx context.Context, in *FootprintIDReq, opts ...grpc.CallOption) (*GetTopicsByFootprintIDResp, error) {
	out := new(GetTopicsByFootprintIDResp)
	err := c.cc.Invoke(ctx, "/FootprintService/GetTopicsByFootprintID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FootprintServiceServer is the server API for FootprintService service.
type FootprintServiceServer interface {
	// 检查用户点赞了足迹
	CheckUserIsLikeFootprint(context.Context, *CheckUserIsLikeFootprintReq) (*CheckUserIsLikeFootprintResp, error)
	// 获取足迹点赞数
	GetFootprintLikeNum(context.Context, *FootprintIDReq) (*GetFootprintLikeNumResp, error)
	// 根据足迹id获取话题列表
	GetTopicsByFootprintID(context.Context, *FootprintIDReq) (*GetTopicsByFootprintIDResp, error)
}

// UnimplementedFootprintServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFootprintServiceServer struct {
}

func (*UnimplementedFootprintServiceServer) CheckUserIsLikeFootprint(context.Context, *CheckUserIsLikeFootprintReq) (*CheckUserIsLikeFootprintResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserIsLikeFootprint not implemented")
}
func (*UnimplementedFootprintServiceServer) GetFootprintLikeNum(context.Context, *FootprintIDReq) (*GetFootprintLikeNumResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFootprintLikeNum not implemented")
}
func (*UnimplementedFootprintServiceServer) GetTopicsByFootprintID(context.Context, *FootprintIDReq) (*GetTopicsByFootprintIDResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopicsByFootprintID not implemented")
}

func RegisterFootprintServiceServer(s *grpc.Server, srv FootprintServiceServer) {
	s.RegisterService(&_FootprintService_serviceDesc, srv)
}

func _FootprintService_CheckUserIsLikeFootprint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserIsLikeFootprintReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FootprintServiceServer).CheckUserIsLikeFootprint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FootprintService/CheckUserIsLikeFootprint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FootprintServiceServer).CheckUserIsLikeFootprint(ctx, req.(*CheckUserIsLikeFootprintReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FootprintService_GetFootprintLikeNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FootprintIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FootprintServiceServer).GetFootprintLikeNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FootprintService/GetFootprintLikeNum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FootprintServiceServer).GetFootprintLikeNum(ctx, req.(*FootprintIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FootprintService_GetTopicsByFootprintID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FootprintIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FootprintServiceServer).GetTopicsByFootprintID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FootprintService/GetTopicsByFootprintID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FootprintServiceServer).GetTopicsByFootprintID(ctx, req.(*FootprintIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FootprintService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "FootprintService",
	HandlerType: (*FootprintServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckUserIsLikeFootprint",
			Handler:    _FootprintService_CheckUserIsLikeFootprint_Handler,
		},
		{
			MethodName: "GetFootprintLikeNum",
			Handler:    _FootprintService_GetFootprintLikeNum_Handler,
		},
		{
			MethodName: "GetTopicsByFootprintID",
			Handler:    _FootprintService_GetTopicsByFootprintID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "footprint/footprint.proto",
}
